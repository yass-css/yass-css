// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`build() matches snapshot 1`] = `
":root {
  --yass-color-red-light: rgb(255, 0, 0);
  --yass-color-red: rgb(255, 0, 0);
  --yass-color-green: rgb(0, 255, 0);
  --yass-block: block;
  --yass-color-blue: rgb(0, 0, 200);
}
.yass-direction-initial { direction: initial; }
.yass-direction-inherit { direction: inherit; }
.yass-direction-unset { direction: unset; }
.yass-direction-revert { direction: revert; }
.yass-direction-revert-layer { direction: revert-layer; }
.yass-direction-ltr { direction: ltr; }
.yass-direction-rtl { direction: rtl; }
.yass-display-initial { display: initial; }
.yass-display-inherit { display: inherit; }
.yass-display-unset { display: unset; }
.yass-display-revert { display: revert; }
.yass-display-revert-layer { display: revert-layer; }
.yass-display-inline { display: inline; }
.yass-display-block { display: block; }
.yass-display-flow { display: flow; }
.yass-display-flow-root { display: flow-root; }
.yass-display-list-item { display: list-item; }
.yass-display-compact { display: compact; }
.yass-display-inline-block { display: inline-block; }
.yass-display-run-in { display: run-in; }
.yass-display-table { display: table; }
.yass-display-inline-table { display: inline-table; }
.yass-display-table-row-group { display: table-row-group; }
.yass-display-table-header-group { display: table-header-group; }
.yass-display-table-footer-group { display: table-footer-group; }
.yass-display-table-row { display: table-row; }
.yass-display-table-column-group { display: table-column-group; }
.yass-display-table-column { display: table-column; }
.yass-display-table-cell { display: table-cell; }
.yass-display-table-caption { display: table-caption; }
.yass-display--webkit-box { display: -webkit-box; }
.yass-display--webkit-inline-box { display: -webkit-inline-box; }
.yass-display-flex { display: flex; }
.yass-display--webkit-flex { display: -webkit-flex; }
.yass-display-inline-flex { display: inline-flex; }
.yass-display--webkit-inline-flex { display: -webkit-inline-flex; }
.yass-display-contents { display: contents; }
.yass-display-none { display: none; }
.yass-display-grid { display: grid; }
.yass-display-inline-grid { display: inline-grid; }
.yass-font-style-initial { font-style: initial; }
.yass-font-style-inherit { font-style: inherit; }
.yass-font-style-unset { font-style: unset; }
.yass-font-style-revert { font-style: revert; }
.yass-font-style-revert-layer { font-style: revert-layer; }
.yass-font-style-normal { font-style: normal; }
.yass-font-style-italic { font-style: italic; }
.yass-font-style-oblique { font-style: oblique; }
.yass-font-stretch-initial { font-stretch: initial; }
.yass-font-stretch-inherit { font-stretch: inherit; }
.yass-font-stretch-unset { font-stretch: unset; }
.yass-font-stretch-revert { font-stretch: revert; }
.yass-font-stretch-revert-layer { font-stretch: revert-layer; }
.yass-font-stretch-normal { font-stretch: normal; }
.yass-font-stretch-ultra-condensed { font-stretch: ultra-condensed; }
.yass-font-stretch-extra-condensed { font-stretch: extra-condensed; }
.yass-font-stretch-condensed { font-stretch: condensed; }
.yass-font-stretch-semi-condensed { font-stretch: semi-condensed; }
.yass-font-stretch-semi-expanded { font-stretch: semi-expanded; }
.yass-font-stretch-expanded { font-stretch: expanded; }
.yass-font-stretch-extra-expanded { font-stretch: extra-expanded; }
.yass-font-stretch-ultra-expanded { font-stretch: ultra-expanded; }
.yass-text-rendering-initial { text-rendering: initial; }
.yass-text-rendering-inherit { text-rendering: inherit; }
.yass-text-rendering-unset { text-rendering: unset; }
.yass-text-rendering-revert { text-rendering: revert; }
.yass-text-rendering-revert-layer { text-rendering: revert-layer; }
.yass-text-rendering-auto { text-rendering: auto; }
.yass-text-rendering-optimizespeed { text-rendering: optimizespeed; }
.yass-text-rendering-optimizelegibility { text-rendering: optimizelegibility; }
.yass-text-rendering-geometricprecision { text-rendering: geometricprecision; }
.yass--webkit-font-kerning-initial { -webkit-font-kerning: initial; }
.yass--webkit-font-kerning-inherit { -webkit-font-kerning: inherit; }
.yass--webkit-font-kerning-unset { -webkit-font-kerning: unset; }
.yass--webkit-font-kerning-revert { -webkit-font-kerning: revert; }
.yass--webkit-font-kerning-revert-layer { -webkit-font-kerning: revert-layer; }
.yass--webkit-font-kerning-auto { -webkit-font-kerning: auto; }
.yass--webkit-font-kerning-normal { -webkit-font-kerning: normal; }
.yass--webkit-font-kerning-none { -webkit-font-kerning: none; }
.yass--webkit-font-smoothing-initial { -webkit-font-smoothing: initial; }
.yass--webkit-font-smoothing-inherit { -webkit-font-smoothing: inherit; }
.yass--webkit-font-smoothing-unset { -webkit-font-smoothing: unset; }
.yass--webkit-font-smoothing-revert { -webkit-font-smoothing: revert; }
.yass--webkit-font-smoothing-revert-layer { -webkit-font-smoothing: revert-layer; }
.yass--webkit-font-smoothing-auto { -webkit-font-smoothing: auto; }
.yass--webkit-font-smoothing-none { -webkit-font-smoothing: none; }
.yass--webkit-font-smoothing-antialiased { -webkit-font-smoothing: antialiased; }
.yass--webkit-font-smoothing-subpixel-antialiased { -webkit-font-smoothing: subpixel-antialiased; }
.yass-font-variant-position-initial { font-variant-position: initial; }
.yass-font-variant-position-inherit { font-variant-position: inherit; }
.yass-font-variant-position-unset { font-variant-position: unset; }
.yass-font-variant-position-revert { font-variant-position: revert; }
.yass-font-variant-position-revert-layer { font-variant-position: revert-layer; }
.yass-font-variant-position-normal { font-variant-position: normal; }
.yass-font-variant-position-sub { font-variant-position: sub; }
.yass-font-variant-position-super { font-variant-position: super; }
.yass-font-variant-caps-initial { font-variant-caps: initial; }
.yass-font-variant-caps-inherit { font-variant-caps: inherit; }
.yass-font-variant-caps-unset { font-variant-caps: unset; }
.yass-font-variant-caps-revert { font-variant-caps: revert; }
.yass-font-variant-caps-revert-layer { font-variant-caps: revert-layer; }
.yass-font-variant-caps-normal { font-variant-caps: normal; }
.yass-font-variant-caps-small-caps { font-variant-caps: small-caps; }
.yass-font-variant-caps-all-small-caps { font-variant-caps: all-small-caps; }
.yass-font-variant-caps-petite-caps { font-variant-caps: petite-caps; }
.yass-font-variant-caps-all-petite-caps { font-variant-caps: all-petite-caps; }
.yass-font-variant-caps-unicase { font-variant-caps: unicase; }
.yass-font-variant-caps-titling-caps { font-variant-caps: titling-caps; }
.yass-font-variant-alternates-initial { font-variant-alternates: initial; }
.yass-font-variant-alternates-inherit { font-variant-alternates: inherit; }
.yass-font-variant-alternates-unset { font-variant-alternates: unset; }
.yass-font-variant-alternates-revert { font-variant-alternates: revert; }
.yass-font-variant-alternates-revert-layer { font-variant-alternates: revert-layer; }
.yass-font-variant-alternates-normal { font-variant-alternates: normal; }
.yass-font-variant-alternates-historical-forms { font-variant-alternates: historical-forms; }
.yass-font-optical-sizing-initial { font-optical-sizing: initial; }
.yass-font-optical-sizing-inherit { font-optical-sizing: inherit; }
.yass-font-optical-sizing-unset { font-optical-sizing: unset; }
.yass-font-optical-sizing-revert { font-optical-sizing: revert; }
.yass-font-optical-sizing-revert-layer { font-optical-sizing: revert-layer; }
.yass-font-optical-sizing-auto { font-optical-sizing: auto; }
.yass-font-optical-sizing-none { font-optical-sizing: none; }
.yass-text-orientation-initial { text-orientation: initial; }
.yass-text-orientation-inherit { text-orientation: inherit; }
.yass-text-orientation-unset { text-orientation: unset; }
.yass-text-orientation-revert { text-orientation: revert; }
.yass-text-orientation-revert-layer { text-orientation: revert-layer; }
.yass-text-orientation-sideways { text-orientation: sideways; }
.yass-text-orientation-mixed { text-orientation: mixed; }
.yass-text-orientation-upright { text-orientation: upright; }
.yass--webkit-text-orientation-initial { -webkit-text-orientation: initial; }
.yass--webkit-text-orientation-inherit { -webkit-text-orientation: inherit; }
.yass--webkit-text-orientation-unset { -webkit-text-orientation: unset; }
.yass--webkit-text-orientation-revert { -webkit-text-orientation: revert; }
.yass--webkit-text-orientation-revert-layer { -webkit-text-orientation: revert-layer; }
.yass--webkit-text-orientation-sideways { -webkit-text-orientation: sideways; }
.yass--webkit-text-orientation-mixed { -webkit-text-orientation: mixed; }
.yass--webkit-text-orientation-upright { -webkit-text-orientation: upright; }
.yass-writing-mode-initial { writing-mode: initial; }
.yass-writing-mode-inherit { writing-mode: inherit; }
.yass-writing-mode-unset { writing-mode: unset; }
.yass-writing-mode-revert { writing-mode: revert; }
.yass-writing-mode-revert-layer { writing-mode: revert-layer; }
.yass-writing-mode-horizontal-tb { writing-mode: horizontal-tb; }
.yass-writing-mode-vertical-rl { writing-mode: vertical-rl; }
.yass-writing-mode-vertical-lr { writing-mode: vertical-lr; }
.yass-writing-mode-sideways-rl { writing-mode: sideways-rl; }
.yass-writing-mode-sideways-lr { writing-mode: sideways-lr; }
.yass--webkit-text-zoom-initial { -webkit-text-zoom: initial; }
.yass--webkit-text-zoom-inherit { -webkit-text-zoom: inherit; }
.yass--webkit-text-zoom-unset { -webkit-text-zoom: unset; }
.yass--webkit-text-zoom-revert { -webkit-text-zoom: revert; }
.yass--webkit-text-zoom-revert-layer { -webkit-text-zoom: revert-layer; }
.yass--webkit-text-zoom-normal { -webkit-text-zoom: normal; }
.yass--webkit-text-zoom-reset { -webkit-text-zoom: reset; }
.yass--webkit-ruby-position-initial { -webkit-ruby-position: initial; }
.yass--webkit-ruby-position-inherit { -webkit-ruby-position: inherit; }
.yass--webkit-ruby-position-unset { -webkit-ruby-position: unset; }
.yass--webkit-ruby-position-revert { -webkit-ruby-position: revert; }
.yass--webkit-ruby-position-revert-layer { -webkit-ruby-position: revert-layer; }
.yass--webkit-ruby-position-inter-character { -webkit-ruby-position: inter-character; }
.yass--webkit-ruby-position-over { -webkit-ruby-position: over; }
.yass--webkit-ruby-position-under { -webkit-ruby-position: under; }
.yass-alignment-baseline-initial { alignment-baseline: initial; }
.yass-alignment-baseline-inherit { alignment-baseline: inherit; }
.yass-alignment-baseline-unset { alignment-baseline: unset; }
.yass-alignment-baseline-revert { alignment-baseline: revert; }
.yass-alignment-baseline-revert-layer { alignment-baseline: revert-layer; }
.yass-alignment-baseline-auto { alignment-baseline: auto; }
.yass-alignment-baseline-baseline { alignment-baseline: baseline; }
.yass-alignment-baseline-middle { alignment-baseline: middle; }
.yass-alignment-baseline-before-edge { alignment-baseline: before-edge; }
.yass-alignment-baseline-after-edge { alignment-baseline: after-edge; }
.yass-alignment-baseline-central { alignment-baseline: central; }
.yass-alignment-baseline-text-before-edge { alignment-baseline: text-before-edge; }
.yass-alignment-baseline-text-after-edge { alignment-baseline: text-after-edge; }
.yass-alignment-baseline-ideographic { alignment-baseline: ideographic; }
.yass-alignment-baseline-hanging { alignment-baseline: hanging; }
.yass-alignment-baseline-mathematical { alignment-baseline: mathematical; }
.yass-animation-direction-initial { animation-direction: initial; }
.yass-animation-direction-inherit { animation-direction: inherit; }
.yass-animation-direction-unset { animation-direction: unset; }
.yass-animation-direction-revert { animation-direction: revert; }
.yass-animation-direction-revert-layer { animation-direction: revert-layer; }
.yass-animation-direction-normal { animation-direction: normal; }
.yass-animation-direction-reverse { animation-direction: reverse; }
.yass-animation-direction-alternate { animation-direction: alternate; }
.yass-animation-direction-alternate-reverse { animation-direction: alternate-reverse; }
.yass-animation-fill-mode-initial { animation-fill-mode: initial; }
.yass-animation-fill-mode-inherit { animation-fill-mode: inherit; }
.yass-animation-fill-mode-unset { animation-fill-mode: unset; }
.yass-animation-fill-mode-revert { animation-fill-mode: revert; }
.yass-animation-fill-mode-revert-layer { animation-fill-mode: revert-layer; }
.yass-animation-fill-mode-forwards { animation-fill-mode: forwards; }
.yass-animation-fill-mode-backwards { animation-fill-mode: backwards; }
.yass-animation-fill-mode-both { animation-fill-mode: both; }
.yass-animation-play-state-initial { animation-play-state: initial; }
.yass-animation-play-state-inherit { animation-play-state: inherit; }
.yass-animation-play-state-unset { animation-play-state: unset; }
.yass-animation-play-state-revert { animation-play-state: revert; }
.yass-animation-play-state-revert-layer { animation-play-state: revert-layer; }
.yass-animation-play-state-running { animation-play-state: running; }
.yass-animation-play-state-paused { animation-play-state: paused; }
.yass-background-attachment-initial { background-attachment: initial; }
.yass-background-attachment-inherit { background-attachment: inherit; }
.yass-background-attachment-unset { background-attachment: unset; }
.yass-background-attachment-revert { background-attachment: revert; }
.yass-background-attachment-revert-layer { background-attachment: revert-layer; }
.yass-background-attachment-fixed { background-attachment: fixed; }
.yass-background-attachment-local { background-attachment: local; }
.yass-background-attachment-scroll { background-attachment: scroll; }
.yass-background-blend-mode-initial { background-blend-mode: initial; }
.yass-background-blend-mode-inherit { background-blend-mode: inherit; }
.yass-background-blend-mode-unset { background-blend-mode: unset; }
.yass-background-blend-mode-revert { background-blend-mode: revert; }
.yass-background-blend-mode-revert-layer { background-blend-mode: revert-layer; }
.yass-background-blend-mode-normal { background-blend-mode: normal; }
.yass-background-blend-mode-multiply { background-blend-mode: multiply; }
.yass-background-blend-mode-screen { background-blend-mode: screen; }
.yass-background-blend-mode-overlay { background-blend-mode: overlay; }
.yass-background-blend-mode-darken { background-blend-mode: darken; }
.yass-background-blend-mode-lighten { background-blend-mode: lighten; }
.yass-background-blend-mode-color-dodge { background-blend-mode: color-dodge; }
.yass-background-blend-mode-color-burn { background-blend-mode: color-burn; }
.yass-background-blend-mode-hard-light { background-blend-mode: hard-light; }
.yass-background-blend-mode-soft-light { background-blend-mode: soft-light; }
.yass-background-blend-mode-difference { background-blend-mode: difference; }
.yass-background-blend-mode-exclusion { background-blend-mode: exclusion; }
.yass-background-blend-mode-hue { background-blend-mode: hue; }
.yass-background-blend-mode-saturation { background-blend-mode: saturation; }
.yass-background-blend-mode-color { background-blend-mode: color; }
.yass-background-blend-mode-luminosity { background-blend-mode: luminosity; }
.yass-background-clip-initial { background-clip: initial; }
.yass-background-clip-inherit { background-clip: inherit; }
.yass-background-clip-unset { background-clip: unset; }
.yass-background-clip-revert { background-clip: revert; }
.yass-background-clip-revert-layer { background-clip: revert-layer; }
.yass-background-clip-border-box { background-clip: border-box; }
.yass-background-clip-padding-box { background-clip: padding-box; }
.yass-background-clip-content-box { background-clip: content-box; }
.yass-border-block-end-style-initial { border-block-end-style: initial; }
.yass-border-block-end-style-inherit { border-block-end-style: inherit; }
.yass-border-block-end-style-unset { border-block-end-style: unset; }
.yass-border-block-end-style-revert { border-block-end-style: revert; }
.yass-border-block-end-style-revert-layer { border-block-end-style: revert-layer; }
.yass-border-block-end-style-none { border-block-end-style: none; }
.yass-border-block-end-style-hidden { border-block-end-style: hidden; }
.yass-border-block-end-style-inset { border-block-end-style: inset; }
.yass-border-block-end-style-groove { border-block-end-style: groove; }
.yass-border-block-end-style-outset { border-block-end-style: outset; }
.yass-border-block-end-style-ridge { border-block-end-style: ridge; }
.yass-border-block-end-style-dotted { border-block-end-style: dotted; }
.yass-border-block-end-style-dashed { border-block-end-style: dashed; }
.yass-border-block-end-style-solid { border-block-end-style: solid; }
.yass-border-block-end-style-double { border-block-end-style: double; }
.yass-border-block-start-style-initial { border-block-start-style: initial; }
.yass-border-block-start-style-inherit { border-block-start-style: inherit; }
.yass-border-block-start-style-unset { border-block-start-style: unset; }
.yass-border-block-start-style-revert { border-block-start-style: revert; }
.yass-border-block-start-style-revert-layer { border-block-start-style: revert-layer; }
.yass-border-block-start-style-none { border-block-start-style: none; }
.yass-border-block-start-style-hidden { border-block-start-style: hidden; }
.yass-border-block-start-style-inset { border-block-start-style: inset; }
.yass-border-block-start-style-groove { border-block-start-style: groove; }
.yass-border-block-start-style-outset { border-block-start-style: outset; }
.yass-border-block-start-style-ridge { border-block-start-style: ridge; }
.yass-border-block-start-style-dotted { border-block-start-style: dotted; }
.yass-border-block-start-style-dashed { border-block-start-style: dashed; }
.yass-border-block-start-style-solid { border-block-start-style: solid; }
.yass-border-block-start-style-double { border-block-start-style: double; }
.yass-border-bottom-style-initial { border-bottom-style: initial; }
.yass-border-bottom-style-inherit { border-bottom-style: inherit; }
.yass-border-bottom-style-unset { border-bottom-style: unset; }
.yass-border-bottom-style-revert { border-bottom-style: revert; }
.yass-border-bottom-style-revert-layer { border-bottom-style: revert-layer; }
.yass-border-bottom-style-none { border-bottom-style: none; }
.yass-border-bottom-style-hidden { border-bottom-style: hidden; }
.yass-border-bottom-style-inset { border-bottom-style: inset; }
.yass-border-bottom-style-groove { border-bottom-style: groove; }
.yass-border-bottom-style-outset { border-bottom-style: outset; }
.yass-border-bottom-style-ridge { border-bottom-style: ridge; }
.yass-border-bottom-style-dotted { border-bottom-style: dotted; }
.yass-border-bottom-style-dashed { border-bottom-style: dashed; }
.yass-border-bottom-style-solid { border-bottom-style: solid; }
.yass-border-bottom-style-double { border-bottom-style: double; }
.yass-border-collapse-initial { border-collapse: initial; }
.yass-border-collapse-inherit { border-collapse: inherit; }
.yass-border-collapse-unset { border-collapse: unset; }
.yass-border-collapse-revert { border-collapse: revert; }
.yass-border-collapse-revert-layer { border-collapse: revert-layer; }
.yass-border-collapse-collapse { border-collapse: collapse; }
.yass-border-collapse-separate { border-collapse: separate; }
.yass-border-inline-end-style-initial { border-inline-end-style: initial; }
.yass-border-inline-end-style-inherit { border-inline-end-style: inherit; }
.yass-border-inline-end-style-unset { border-inline-end-style: unset; }
.yass-border-inline-end-style-revert { border-inline-end-style: revert; }
.yass-border-inline-end-style-revert-layer { border-inline-end-style: revert-layer; }
.yass-border-inline-end-style-none { border-inline-end-style: none; }
.yass-border-inline-end-style-hidden { border-inline-end-style: hidden; }
.yass-border-inline-end-style-inset { border-inline-end-style: inset; }
.yass-border-inline-end-style-groove { border-inline-end-style: groove; }
.yass-border-inline-end-style-outset { border-inline-end-style: outset; }
.yass-border-inline-end-style-ridge { border-inline-end-style: ridge; }
.yass-border-inline-end-style-dotted { border-inline-end-style: dotted; }
.yass-border-inline-end-style-dashed { border-inline-end-style: dashed; }
.yass-border-inline-end-style-solid { border-inline-end-style: solid; }
.yass-border-inline-end-style-double { border-inline-end-style: double; }
.yass-border-inline-start-style-initial { border-inline-start-style: initial; }
.yass-border-inline-start-style-inherit { border-inline-start-style: inherit; }
.yass-border-inline-start-style-unset { border-inline-start-style: unset; }
.yass-border-inline-start-style-revert { border-inline-start-style: revert; }
.yass-border-inline-start-style-revert-layer { border-inline-start-style: revert-layer; }
.yass-border-inline-start-style-none { border-inline-start-style: none; }
.yass-border-inline-start-style-hidden { border-inline-start-style: hidden; }
.yass-border-inline-start-style-inset { border-inline-start-style: inset; }
.yass-border-inline-start-style-groove { border-inline-start-style: groove; }
.yass-border-inline-start-style-outset { border-inline-start-style: outset; }
.yass-border-inline-start-style-ridge { border-inline-start-style: ridge; }
.yass-border-inline-start-style-dotted { border-inline-start-style: dotted; }
.yass-border-inline-start-style-dashed { border-inline-start-style: dashed; }
.yass-border-inline-start-style-solid { border-inline-start-style: solid; }
.yass-border-inline-start-style-double { border-inline-start-style: double; }
.yass-border-style-initial { border-style: initial; }
.yass-border-style-inherit { border-style: inherit; }
.yass-border-style-unset { border-style: unset; }
.yass-border-style-revert { border-style: revert; }
.yass-border-style-revert-layer { border-style: revert-layer; }
.yass-border-style-none { border-style: none; }
.yass-border-style-hidden { border-style: hidden; }
.yass-border-style-inset { border-style: inset; }
.yass-border-style-groove { border-style: groove; }
.yass-border-style-outset { border-style: outset; }
.yass-border-style-ridge { border-style: ridge; }
.yass-border-style-dotted { border-style: dotted; }
.yass-border-style-dashed { border-style: dashed; }
.yass-border-style-solid { border-style: solid; }
.yass-border-style-double { border-style: double; }
.yass-border-left-style-initial { border-left-style: initial; }
.yass-border-left-style-inherit { border-left-style: inherit; }
.yass-border-left-style-unset { border-left-style: unset; }
.yass-border-left-style-revert { border-left-style: revert; }
.yass-border-left-style-revert-layer { border-left-style: revert-layer; }
.yass-border-left-style-none { border-left-style: none; }
.yass-border-left-style-hidden { border-left-style: hidden; }
.yass-border-left-style-inset { border-left-style: inset; }
.yass-border-left-style-groove { border-left-style: groove; }
.yass-border-left-style-outset { border-left-style: outset; }
.yass-border-left-style-ridge { border-left-style: ridge; }
.yass-border-left-style-dotted { border-left-style: dotted; }
.yass-border-left-style-dashed { border-left-style: dashed; }
.yass-border-left-style-solid { border-left-style: solid; }
.yass-border-left-style-double { border-left-style: double; }
.yass-border-right-style-initial { border-right-style: initial; }
.yass-border-right-style-inherit { border-right-style: inherit; }
.yass-border-right-style-unset { border-right-style: unset; }
.yass-border-right-style-revert { border-right-style: revert; }
.yass-border-right-style-revert-layer { border-right-style: revert-layer; }
.yass-border-right-style-none { border-right-style: none; }
.yass-border-right-style-hidden { border-right-style: hidden; }
.yass-border-right-style-inset { border-right-style: inset; }
.yass-border-right-style-groove { border-right-style: groove; }
.yass-border-right-style-outset { border-right-style: outset; }
.yass-border-right-style-ridge { border-right-style: ridge; }
.yass-border-right-style-dotted { border-right-style: dotted; }
.yass-border-right-style-dashed { border-right-style: dashed; }
.yass-border-right-style-solid { border-right-style: solid; }
.yass-border-right-style-double { border-right-style: double; }
.yass-border-top-style-initial { border-top-style: initial; }
.yass-border-top-style-inherit { border-top-style: inherit; }
.yass-border-top-style-unset { border-top-style: unset; }
.yass-border-top-style-revert { border-top-style: revert; }
.yass-border-top-style-revert-layer { border-top-style: revert-layer; }
.yass-border-top-style-none { border-top-style: none; }
.yass-border-top-style-hidden { border-top-style: hidden; }
.yass-border-top-style-inset { border-top-style: inset; }
.yass-border-top-style-groove { border-top-style: groove; }
.yass-border-top-style-outset { border-top-style: outset; }
.yass-border-top-style-ridge { border-top-style: ridge; }
.yass-border-top-style-dotted { border-top-style: dotted; }
.yass-border-top-style-dashed { border-top-style: dashed; }
.yass-border-top-style-solid { border-top-style: solid; }
.yass-border-top-style-double { border-top-style: double; }
.yass-box-sizing-initial { box-sizing: initial; }
.yass-box-sizing-inherit { box-sizing: inherit; }
.yass-box-sizing-unset { box-sizing: unset; }
.yass-box-sizing-revert { box-sizing: revert; }
.yass-box-sizing-revert-layer { box-sizing: revert-layer; }
.yass-box-sizing-border-box { box-sizing: border-box; }
.yass-box-sizing-content-box { box-sizing: content-box; }
.yass-break-after-initial { break-after: initial; }
.yass-break-after-inherit { break-after: inherit; }
.yass-break-after-unset { break-after: unset; }
.yass-break-after-revert { break-after: revert; }
.yass-break-after-revert-layer { break-after: revert-layer; }
.yass-break-after-auto { break-after: auto; }
.yass-break-after-avoid { break-after: avoid; }
.yass-break-after-left { break-after: left; }
.yass-break-after-right { break-after: right; }
.yass-break-after-recto { break-after: recto; }
.yass-break-after-verso { break-after: verso; }
.yass-break-after-column { break-after: column; }
.yass-break-after-page { break-after: page; }
.yass-break-after-avoid-column { break-after: avoid-column; }
.yass-break-after-avoid-page { break-after: avoid-page; }
.yass-break-before-initial { break-before: initial; }
.yass-break-before-inherit { break-before: inherit; }
.yass-break-before-unset { break-before: unset; }
.yass-break-before-revert { break-before: revert; }
.yass-break-before-revert-layer { break-before: revert-layer; }
.yass-break-before-auto { break-before: auto; }
.yass-break-before-avoid { break-before: avoid; }
.yass-break-before-left { break-before: left; }
.yass-break-before-right { break-before: right; }
.yass-break-before-recto { break-before: recto; }
.yass-break-before-verso { break-before: verso; }
.yass-break-before-column { break-before: column; }
.yass-break-before-page { break-before: page; }
.yass-break-before-avoid-column { break-before: avoid-column; }
.yass-break-before-avoid-page { break-before: avoid-page; }
.yass-break-inside-initial { break-inside: initial; }
.yass-break-inside-inherit { break-inside: inherit; }
.yass-break-inside-unset { break-inside: unset; }
.yass-break-inside-revert { break-inside: revert; }
.yass-break-inside-revert-layer { break-inside: revert-layer; }
.yass-break-inside-auto { break-inside: auto; }
.yass-break-inside-avoid { break-inside: avoid; }
.yass-break-inside-avoid-column { break-inside: avoid-column; }
.yass-break-inside-avoid-page { break-inside: avoid-page; }
.yass-buffered-rendering-initial { buffered-rendering: initial; }
.yass-buffered-rendering-inherit { buffered-rendering: inherit; }
.yass-buffered-rendering-unset { buffered-rendering: unset; }
.yass-buffered-rendering-revert { buffered-rendering: revert; }
.yass-buffered-rendering-revert-layer { buffered-rendering: revert-layer; }
.yass-buffered-rendering-auto { buffered-rendering: auto; }
.yass-buffered-rendering-dynamic { buffered-rendering: dynamic; }
.yass-buffered-rendering-static { buffered-rendering: static; }
.yass-caption-side-initial { caption-side: initial; }
.yass-caption-side-inherit { caption-side: inherit; }
.yass-caption-side-unset { caption-side: unset; }
.yass-caption-side-revert { caption-side: revert; }
.yass-caption-side-revert-layer { caption-side: revert-layer; }
.yass-caption-side-left { caption-side: left; }
.yass-caption-side-right { caption-side: right; }
.yass-caption-side-top { caption-side: top; }
.yass-caption-side-bottom { caption-side: bottom; }
.yass-clear-initial { clear: initial; }
.yass-clear-inherit { clear: inherit; }
.yass-clear-unset { clear: unset; }
.yass-clear-revert { clear: revert; }
.yass-clear-revert-layer { clear: revert-layer; }
.yass-clear-none { clear: none; }
.yass-clear-left { clear: left; }
.yass-clear-right { clear: right; }
.yass-clear-both { clear: both; }
.yass-clip-rule-initial { clip-rule: initial; }
.yass-clip-rule-inherit { clip-rule: inherit; }
.yass-clip-rule-unset { clip-rule: unset; }
.yass-clip-rule-revert { clip-rule: revert; }
.yass-clip-rule-revert-layer { clip-rule: revert-layer; }
.yass-clip-rule-nonzero { clip-rule: nonzero; }
.yass-clip-rule-evenodd { clip-rule: evenodd; }
.yass-color-interpolation-initial { color-interpolation: initial; }
.yass-color-interpolation-inherit { color-interpolation: inherit; }
.yass-color-interpolation-unset { color-interpolation: unset; }
.yass-color-interpolation-revert { color-interpolation: revert; }
.yass-color-interpolation-revert-layer { color-interpolation: revert-layer; }
.yass-color-interpolation-auto { color-interpolation: auto; }
.yass-color-interpolation-srgb { color-interpolation: srgb; }
.yass-color-interpolation-linearrgb { color-interpolation: linearrgb; }
.yass-color-interpolation-filters-initial { color-interpolation-filters: initial; }
.yass-color-interpolation-filters-inherit { color-interpolation-filters: inherit; }
.yass-color-interpolation-filters-unset { color-interpolation-filters: unset; }
.yass-color-interpolation-filters-revert { color-interpolation-filters: revert; }
.yass-color-interpolation-filters-revert-layer { color-interpolation-filters: revert-layer; }
.yass-color-interpolation-filters-auto { color-interpolation-filters: auto; }
.yass-color-interpolation-filters-srgb { color-interpolation-filters: srgb; }
.yass-color-interpolation-filters-linearrgb { color-interpolation-filters: linearrgb; }
.yass-color-rendering-initial { color-rendering: initial; }
.yass-color-rendering-inherit { color-rendering: inherit; }
.yass-color-rendering-unset { color-rendering: unset; }
.yass-color-rendering-revert { color-rendering: revert; }
.yass-color-rendering-revert-layer { color-rendering: revert-layer; }
.yass-color-rendering-auto { color-rendering: auto; }
.yass-color-rendering-optimizespeed { color-rendering: optimizespeed; }
.yass-color-rendering-optimizequality { color-rendering: optimizequality; }
.yass-cursor-initial { cursor: initial; }
.yass-cursor-inherit { cursor: inherit; }
.yass-cursor-unset { cursor: unset; }
.yass-cursor-revert { cursor: revert; }
.yass-cursor-revert-layer { cursor: revert-layer; }
.yass-cursor-context-menu { cursor: context-menu; }
.yass-cursor-help { cursor: help; }
.yass-cursor-pointer { cursor: pointer; }
.yass-cursor-progress { cursor: progress; }
.yass-cursor-wait { cursor: wait; }
.yass-cursor-cell { cursor: cell; }
.yass-cursor-crosshair { cursor: crosshair; }
.yass-cursor-text { cursor: text; }
.yass-cursor-vertical-text { cursor: vertical-text; }
.yass-cursor-alias { cursor: alias; }
.yass-cursor-copy { cursor: copy; }
.yass-cursor-move { cursor: move; }
.yass-cursor-no-drop { cursor: no-drop; }
.yass-cursor-not-allowed { cursor: not-allowed; }
.yass-cursor-grab { cursor: grab; }
.yass-cursor-grabbing { cursor: grabbing; }
.yass-cursor-e-resize { cursor: e-resize; }
.yass-cursor-n-resize { cursor: n-resize; }
.yass-cursor-ne-resize { cursor: ne-resize; }
.yass-cursor-nw-resize { cursor: nw-resize; }
.yass-cursor-s-resize { cursor: s-resize; }
.yass-cursor-se-resize { cursor: se-resize; }
.yass-cursor-sw-resize { cursor: sw-resize; }
.yass-cursor-w-resize { cursor: w-resize; }
.yass-cursor-ew-resize { cursor: ew-resize; }
.yass-cursor-ns-resize { cursor: ns-resize; }
.yass-cursor-nesw-resize { cursor: nesw-resize; }
.yass-cursor-nwse-resize { cursor: nwse-resize; }
.yass-cursor-col-resize { cursor: col-resize; }
.yass-cursor-row-resize { cursor: row-resize; }
.yass-cursor-all-scroll { cursor: all-scroll; }
.yass-cursor-zoom-in { cursor: zoom-in; }
.yass-cursor-zoom-out { cursor: zoom-out; }
.yass--webkit-cursor-visibility-initial { -webkit-cursor-visibility: initial; }
.yass--webkit-cursor-visibility-inherit { -webkit-cursor-visibility: inherit; }
.yass--webkit-cursor-visibility-unset { -webkit-cursor-visibility: unset; }
.yass--webkit-cursor-visibility-revert { -webkit-cursor-visibility: revert; }
.yass--webkit-cursor-visibility-revert-layer { -webkit-cursor-visibility: revert-layer; }
.yass--webkit-cursor-visibility-auto { -webkit-cursor-visibility: auto; }
.yass--webkit-cursor-visibility-auto-hide { -webkit-cursor-visibility: auto-hide; }
.yass-dominant-baseline-initial { dominant-baseline: initial; }
.yass-dominant-baseline-inherit { dominant-baseline: inherit; }
.yass-dominant-baseline-unset { dominant-baseline: unset; }
.yass-dominant-baseline-revert { dominant-baseline: revert; }
.yass-dominant-baseline-revert-layer { dominant-baseline: revert-layer; }
.yass-dominant-baseline-auto { dominant-baseline: auto; }
.yass-dominant-baseline-middle { dominant-baseline: middle; }
.yass-dominant-baseline-use-script { dominant-baseline: use-script; }
.yass-dominant-baseline-no-change { dominant-baseline: no-change; }
.yass-dominant-baseline-reset-size { dominant-baseline: reset-size; }
.yass-dominant-baseline-central { dominant-baseline: central; }
.yass-dominant-baseline-text-before-edge { dominant-baseline: text-before-edge; }
.yass-dominant-baseline-text-after-edge { dominant-baseline: text-after-edge; }
.yass-dominant-baseline-ideographic { dominant-baseline: ideographic; }
.yass-dominant-baseline-hanging { dominant-baseline: hanging; }
.yass-dominant-baseline-mathematical { dominant-baseline: mathematical; }
.yass-empty-cells-initial { empty-cells: initial; }
.yass-empty-cells-inherit { empty-cells: inherit; }
.yass-empty-cells-unset { empty-cells: unset; }
.yass-empty-cells-revert { empty-cells: revert; }
.yass-empty-cells-revert-layer { empty-cells: revert-layer; }
.yass-empty-cells-show { empty-cells: show; }
.yass-empty-cells-hide { empty-cells: hide; }
.yass-fill-rule-initial { fill-rule: initial; }
.yass-fill-rule-inherit { fill-rule: inherit; }
.yass-fill-rule-unset { fill-rule: unset; }
.yass-fill-rule-revert { fill-rule: revert; }
.yass-fill-rule-revert-layer { fill-rule: revert-layer; }
.yass-fill-rule-nonzero { fill-rule: nonzero; }
.yass-fill-rule-evenodd { fill-rule: evenodd; }
.yass-float-initial { float: initial; }
.yass-float-inherit { float: inherit; }
.yass-float-unset { float: unset; }
.yass-float-revert { float: revert; }
.yass-float-revert-layer { float: revert-layer; }
.yass-float-left { float: left; }
.yass-float-right { float: right; }
.yass-float-none { float: none; }
.yass-image-rendering-initial { image-rendering: initial; }
.yass-image-rendering-inherit { image-rendering: inherit; }
.yass-image-rendering-unset { image-rendering: unset; }
.yass-image-rendering-revert { image-rendering: revert; }
.yass-image-rendering-revert-layer { image-rendering: revert-layer; }
.yass-image-rendering-auto { image-rendering: auto; }
.yass-image-rendering-optimizespeed { image-rendering: optimizespeed; }
.yass-image-rendering-optimizequality { image-rendering: optimizequality; }
.yass-image-rendering-crisp-edges { image-rendering: crisp-edges; }
.yass-image-rendering-pixelated { image-rendering: pixelated; }
.yass-list-style-position-initial { list-style-position: initial; }
.yass-list-style-position-inherit { list-style-position: inherit; }
.yass-list-style-position-unset { list-style-position: unset; }
.yass-list-style-position-revert { list-style-position: revert; }
.yass-list-style-position-revert-layer { list-style-position: revert-layer; }
.yass-list-style-position-inside { list-style-position: inside; }
.yass-list-style-position-outside { list-style-position: outside; }
.yass-list-style-type-initial { list-style-type: initial; }
.yass-list-style-type-inherit { list-style-type: inherit; }
.yass-list-style-type-unset { list-style-type: unset; }
.yass-list-style-type-revert { list-style-type: revert; }
.yass-list-style-type-revert-layer { list-style-type: revert-layer; }
.yass-list-style-type-disc { list-style-type: disc; }
.yass-list-style-type-circle { list-style-type: circle; }
.yass-list-style-type-square { list-style-type: square; }
.yass-list-style-type-decimal { list-style-type: decimal; }
.yass-list-style-type-decimal-leading-zero { list-style-type: decimal-leading-zero; }
.yass-list-style-type-arabic-indic { list-style-type: arabic-indic; }
.yass-list-style-type-binary { list-style-type: binary; }
.yass-list-style-type-bengali { list-style-type: bengali; }
.yass-list-style-type-cambodian { list-style-type: cambodian; }
.yass-list-style-type-khmer { list-style-type: khmer; }
.yass-list-style-type-devanagari { list-style-type: devanagari; }
.yass-list-style-type-gujarati { list-style-type: gujarati; }
.yass-list-style-type-gurmukhi { list-style-type: gurmukhi; }
.yass-list-style-type-kannada { list-style-type: kannada; }
.yass-list-style-type-lower-hexadecimal { list-style-type: lower-hexadecimal; }
.yass-list-style-type-lao { list-style-type: lao; }
.yass-list-style-type-malayalam { list-style-type: malayalam; }
.yass-list-style-type-mongolian { list-style-type: mongolian; }
.yass-list-style-type-myanmar { list-style-type: myanmar; }
.yass-list-style-type-octal { list-style-type: octal; }
.yass-list-style-type-oriya { list-style-type: oriya; }
.yass-list-style-type-persian { list-style-type: persian; }
.yass-list-style-type-urdu { list-style-type: urdu; }
.yass-list-style-type-telugu { list-style-type: telugu; }
.yass-list-style-type-tibetan { list-style-type: tibetan; }
.yass-list-style-type-thai { list-style-type: thai; }
.yass-list-style-type-upper-hexadecimal { list-style-type: upper-hexadecimal; }
.yass-list-style-type-lower-roman { list-style-type: lower-roman; }
.yass-list-style-type-upper-roman { list-style-type: upper-roman; }
.yass-list-style-type-lower-greek { list-style-type: lower-greek; }
.yass-list-style-type-lower-alpha { list-style-type: lower-alpha; }
.yass-list-style-type-lower-latin { list-style-type: lower-latin; }
.yass-list-style-type-upper-alpha { list-style-type: upper-alpha; }
.yass-list-style-type-upper-latin { list-style-type: upper-latin; }
.yass-list-style-type-afar { list-style-type: afar; }
.yass-list-style-type-ethiopic-halehame-aa-et { list-style-type: ethiopic-halehame-aa-et; }
.yass-list-style-type-ethiopic-halehame-aa-er { list-style-type: ethiopic-halehame-aa-er; }
.yass-list-style-type-amharic { list-style-type: amharic; }
.yass-list-style-type-ethiopic-halehame-am-et { list-style-type: ethiopic-halehame-am-et; }
.yass-list-style-type-amharic-abegede { list-style-type: amharic-abegede; }
.yass-list-style-type-ethiopic-abegede-am-et { list-style-type: ethiopic-abegede-am-et; }
.yass-list-style-type-cjk-earthly-branch { list-style-type: cjk-earthly-branch; }
.yass-list-style-type-cjk-heavenly-stem { list-style-type: cjk-heavenly-stem; }
.yass-list-style-type-ethiopic { list-style-type: ethiopic; }
.yass-list-style-type-ethiopic-halehame-gez { list-style-type: ethiopic-halehame-gez; }
.yass-list-style-type-ethiopic-abegede { list-style-type: ethiopic-abegede; }
.yass-list-style-type-ethiopic-abegede-gez { list-style-type: ethiopic-abegede-gez; }
.yass-list-style-type-hangul-consonant { list-style-type: hangul-consonant; }
.yass-list-style-type-hangul { list-style-type: hangul; }
.yass-list-style-type-lower-norwegian { list-style-type: lower-norwegian; }
.yass-list-style-type-oromo { list-style-type: oromo; }
.yass-list-style-type-ethiopic-halehame-om-et { list-style-type: ethiopic-halehame-om-et; }
.yass-list-style-type-sidama { list-style-type: sidama; }
.yass-list-style-type-ethiopic-halehame-sid-et { list-style-type: ethiopic-halehame-sid-et; }
.yass-list-style-type-somali { list-style-type: somali; }
.yass-list-style-type-ethiopic-halehame-so-et { list-style-type: ethiopic-halehame-so-et; }
.yass-list-style-type-tigre { list-style-type: tigre; }
.yass-list-style-type-ethiopic-halehame-tig { list-style-type: ethiopic-halehame-tig; }
.yass-list-style-type-tigrinya-er { list-style-type: tigrinya-er; }
.yass-list-style-type-ethiopic-halehame-ti-er { list-style-type: ethiopic-halehame-ti-er; }
.yass-list-style-type-tigrinya-er-abegede { list-style-type: tigrinya-er-abegede; }
.yass-list-style-type-ethiopic-abegede-ti-er { list-style-type: ethiopic-abegede-ti-er; }
.yass-list-style-type-tigrinya-et { list-style-type: tigrinya-et; }
.yass-list-style-type-ethiopic-halehame-ti-et { list-style-type: ethiopic-halehame-ti-et; }
.yass-list-style-type-tigrinya-et-abegede { list-style-type: tigrinya-et-abegede; }
.yass-list-style-type-ethiopic-abegede-ti-et { list-style-type: ethiopic-abegede-ti-et; }
.yass-list-style-type-upper-greek { list-style-type: upper-greek; }
.yass-list-style-type-upper-norwegian { list-style-type: upper-norwegian; }
.yass-list-style-type-asterisks { list-style-type: asterisks; }
.yass-list-style-type-footnotes { list-style-type: footnotes; }
.yass-list-style-type-hebrew { list-style-type: hebrew; }
.yass-list-style-type-armenian { list-style-type: armenian; }
.yass-list-style-type-lower-armenian { list-style-type: lower-armenian; }
.yass-list-style-type-upper-armenian { list-style-type: upper-armenian; }
.yass-list-style-type-georgian { list-style-type: georgian; }
.yass-list-style-type-cjk-ideographic { list-style-type: cjk-ideographic; }
.yass-list-style-type-hiragana { list-style-type: hiragana; }
.yass-list-style-type-katakana { list-style-type: katakana; }
.yass-list-style-type-hiragana-iroha { list-style-type: hiragana-iroha; }
.yass-list-style-type-katakana-iroha { list-style-type: katakana-iroha; }
.yass-list-style-type-none { list-style-type: none; }
.yass-mask-type-initial { mask-type: initial; }
.yass-mask-type-inherit { mask-type: inherit; }
.yass-mask-type-unset { mask-type: unset; }
.yass-mask-type-revert { mask-type: revert; }
.yass-mask-type-revert-layer { mask-type: revert-layer; }
.yass-mask-type-luminance { mask-type: luminance; }
.yass-mask-type-alpha { mask-type: alpha; }
.yass-math-style-initial { math-style: initial; }
.yass-math-style-inherit { math-style: inherit; }
.yass-math-style-unset { math-style: unset; }
.yass-math-style-revert { math-style: revert; }
.yass-math-style-revert-layer { math-style: revert-layer; }
.yass-math-style-normal { math-style: normal; }
.yass-math-style-compact { math-style: compact; }
.yass-object-fit-initial { object-fit: initial; }
.yass-object-fit-inherit { object-fit: inherit; }
.yass-object-fit-unset { object-fit: unset; }
.yass-object-fit-revert { object-fit: revert; }
.yass-object-fit-revert-layer { object-fit: revert-layer; }
.yass-object-fit-fill { object-fit: fill; }
.yass-object-fit-contain { object-fit: contain; }
.yass-object-fit-cover { object-fit: cover; }
.yass-object-fit-none { object-fit: none; }
.yass-object-fit-scale-down { object-fit: scale-down; }
.yass-outline-style-initial { outline-style: initial; }
.yass-outline-style-inherit { outline-style: inherit; }
.yass-outline-style-unset { outline-style: unset; }
.yass-outline-style-revert { outline-style: revert; }
.yass-outline-style-revert-layer { outline-style: revert-layer; }
.yass-outline-style-auto { outline-style: auto; }
.yass-outline-style-none { outline-style: none; }
.yass-outline-style-inset { outline-style: inset; }
.yass-outline-style-groove { outline-style: groove; }
.yass-outline-style-outset { outline-style: outset; }
.yass-outline-style-ridge { outline-style: ridge; }
.yass-outline-style-dotted { outline-style: dotted; }
.yass-outline-style-dashed { outline-style: dashed; }
.yass-outline-style-solid { outline-style: solid; }
.yass-outline-style-double { outline-style: double; }
.yass-overflow-wrap-initial { overflow-wrap: initial; }
.yass-overflow-wrap-inherit { overflow-wrap: inherit; }
.yass-overflow-wrap-unset { overflow-wrap: unset; }
.yass-overflow-wrap-revert { overflow-wrap: revert; }
.yass-overflow-wrap-revert-layer { overflow-wrap: revert-layer; }
.yass-overflow-wrap-normal { overflow-wrap: normal; }
.yass-overflow-wrap-break-word { overflow-wrap: break-word; }
.yass-overflow-initial { overflow: initial; }
.yass-overflow-inherit { overflow: inherit; }
.yass-overflow-unset { overflow: unset; }
.yass-overflow-revert { overflow: revert; }
.yass-overflow-revert-layer { overflow: revert-layer; }
.yass-overflow-visible { overflow: visible; }
.yass-overflow-hidden { overflow: hidden; }
.yass-overflow-scroll { overflow: scroll; }
.yass-overflow-auto { overflow: auto; }
.yass-overflow-x-initial { overflow-x: initial; }
.yass-overflow-x-inherit { overflow-x: inherit; }
.yass-overflow-x-unset { overflow-x: unset; }
.yass-overflow-x-revert { overflow-x: revert; }
.yass-overflow-x-revert-layer { overflow-x: revert-layer; }
.yass-overflow-x-visible { overflow-x: visible; }
.yass-overflow-x-hidden { overflow-x: hidden; }
.yass-overflow-x-scroll { overflow-x: scroll; }
.yass-overflow-x-auto { overflow-x: auto; }
.yass-overflow-y-initial { overflow-y: initial; }
.yass-overflow-y-inherit { overflow-y: inherit; }
.yass-overflow-y-unset { overflow-y: unset; }
.yass-overflow-y-revert { overflow-y: revert; }
.yass-overflow-y-revert-layer { overflow-y: revert-layer; }
.yass-overflow-y-visible { overflow-y: visible; }
.yass-overflow-y-hidden { overflow-y: hidden; }
.yass-overflow-y-scroll { overflow-y: scroll; }
.yass-overflow-y-auto { overflow-y: auto; }
.yass-overflow-y--webkit-paged-x { overflow-y: -webkit-paged-x; }
.yass-overflow-y--webkit-paged-y { overflow-y: -webkit-paged-y; }
.yass-overscroll-behavior-x-initial { overscroll-behavior-x: initial; }
.yass-overscroll-behavior-x-inherit { overscroll-behavior-x: inherit; }
.yass-overscroll-behavior-x-unset { overscroll-behavior-x: unset; }
.yass-overscroll-behavior-x-revert { overscroll-behavior-x: revert; }
.yass-overscroll-behavior-x-revert-layer { overscroll-behavior-x: revert-layer; }
.yass-overscroll-behavior-x-contain { overscroll-behavior-x: contain; }
.yass-overscroll-behavior-x-none { overscroll-behavior-x: none; }
.yass-overscroll-behavior-x-auto { overscroll-behavior-x: auto; }
.yass-overscroll-behavior-y-initial { overscroll-behavior-y: initial; }
.yass-overscroll-behavior-y-inherit { overscroll-behavior-y: inherit; }
.yass-overscroll-behavior-y-unset { overscroll-behavior-y: unset; }
.yass-overscroll-behavior-y-revert { overscroll-behavior-y: revert; }
.yass-overscroll-behavior-y-revert-layer { overscroll-behavior-y: revert-layer; }
.yass-overscroll-behavior-y-contain { overscroll-behavior-y: contain; }
.yass-overscroll-behavior-y-none { overscroll-behavior-y: none; }
.yass-overscroll-behavior-y-auto { overscroll-behavior-y: auto; }
.yass-pointer-events-initial { pointer-events: initial; }
.yass-pointer-events-inherit { pointer-events: inherit; }
.yass-pointer-events-unset { pointer-events: unset; }
.yass-pointer-events-revert { pointer-events: revert; }
.yass-pointer-events-revert-layer { pointer-events: revert-layer; }
.yass-pointer-events-visible { pointer-events: visible; }
.yass-pointer-events-none { pointer-events: none; }
.yass-pointer-events-all { pointer-events: all; }
.yass-pointer-events-auto { pointer-events: auto; }
.yass-pointer-events-visiblepainted { pointer-events: visiblepainted; }
.yass-pointer-events-visiblefill { pointer-events: visiblefill; }
.yass-pointer-events-visiblestroke { pointer-events: visiblestroke; }
.yass-pointer-events-painted { pointer-events: painted; }
.yass-pointer-events-fill { pointer-events: fill; }
.yass-pointer-events-stroke { pointer-events: stroke; }
.yass-pointer-events-bounding-box { pointer-events: bounding-box; }
.yass-position-initial { position: initial; }
.yass-position-inherit { position: inherit; }
.yass-position-unset { position: unset; }
.yass-position-revert { position: revert; }
.yass-position-revert-layer { position: revert-layer; }
.yass-position-static { position: static; }
.yass-position-relative { position: relative; }
.yass-position-absolute { position: absolute; }
.yass-position-fixed { position: fixed; }
.yass-position-sticky { position: sticky; }
.yass-resize-initial { resize: initial; }
.yass-resize-inherit { resize: inherit; }
.yass-resize-unset { resize: unset; }
.yass-resize-revert { resize: revert; }
.yass-resize-revert-layer { resize: revert-layer; }
.yass-resize-none { resize: none; }
.yass-resize-both { resize: both; }
.yass-resize-horizontal { resize: horizontal; }
.yass-resize-vertical { resize: vertical; }
.yass-resize-auto { resize: auto; }
.yass-shape-rendering-initial { shape-rendering: initial; }
.yass-shape-rendering-inherit { shape-rendering: inherit; }
.yass-shape-rendering-unset { shape-rendering: unset; }
.yass-shape-rendering-revert { shape-rendering: revert; }
.yass-shape-rendering-revert-layer { shape-rendering: revert-layer; }
.yass-shape-rendering-auto { shape-rendering: auto; }
.yass-shape-rendering-optimizespeed { shape-rendering: optimizespeed; }
.yass-shape-rendering-crispedges { shape-rendering: crispedges; }
.yass-shape-rendering-geometricprecision { shape-rendering: geometricprecision; }
.yass-stroke-linecap-initial { stroke-linecap: initial; }
.yass-stroke-linecap-inherit { stroke-linecap: inherit; }
.yass-stroke-linecap-unset { stroke-linecap: unset; }
.yass-stroke-linecap-revert { stroke-linecap: revert; }
.yass-stroke-linecap-revert-layer { stroke-linecap: revert-layer; }
.yass-stroke-linecap-butt { stroke-linecap: butt; }
.yass-stroke-linecap-round { stroke-linecap: round; }
.yass-stroke-linecap-square { stroke-linecap: square; }
.yass-stroke-linejoin-initial { stroke-linejoin: initial; }
.yass-stroke-linejoin-inherit { stroke-linejoin: inherit; }
.yass-stroke-linejoin-unset { stroke-linejoin: unset; }
.yass-stroke-linejoin-revert { stroke-linejoin: revert; }
.yass-stroke-linejoin-revert-layer { stroke-linejoin: revert-layer; }
.yass-stroke-linejoin-miter { stroke-linejoin: miter; }
.yass-stroke-linejoin-round { stroke-linejoin: round; }
.yass-stroke-linejoin-bevel { stroke-linejoin: bevel; }
.yass-table-layout-initial { table-layout: initial; }
.yass-table-layout-inherit { table-layout: inherit; }
.yass-table-layout-unset { table-layout: unset; }
.yass-table-layout-revert { table-layout: revert; }
.yass-table-layout-revert-layer { table-layout: revert-layer; }
.yass-table-layout-auto { table-layout: auto; }
.yass-table-layout-fixed { table-layout: fixed; }
.yass-text-align-initial { text-align: initial; }
.yass-text-align-inherit { text-align: inherit; }
.yass-text-align-unset { text-align: unset; }
.yass-text-align-revert { text-align: revert; }
.yass-text-align-revert-layer { text-align: revert-layer; }
.yass-text-align-left { text-align: left; }
.yass-text-align-right { text-align: right; }
.yass-text-align-center { text-align: center; }
.yass-text-align-justify { text-align: justify; }
.yass-text-align--webkit-left { text-align: -webkit-left; }
.yass-text-align--webkit-right { text-align: -webkit-right; }
.yass-text-align--webkit-center { text-align: -webkit-center; }
.yass-text-align--webkit-match-parent { text-align: -webkit-match-parent; }
.yass-text-align-start { text-align: start; }
.yass-text-align-end { text-align: end; }
.yass-text-anchor-initial { text-anchor: initial; }
.yass-text-anchor-inherit { text-anchor: inherit; }
.yass-text-anchor-unset { text-anchor: unset; }
.yass-text-anchor-revert { text-anchor: revert; }
.yass-text-anchor-revert-layer { text-anchor: revert-layer; }
.yass-text-anchor-start { text-anchor: start; }
.yass-text-anchor-middle { text-anchor: middle; }
.yass-text-anchor-end { text-anchor: end; }
.yass-text-decoration-initial { text-decoration: initial; }
.yass-text-decoration-inherit { text-decoration: inherit; }
.yass-text-decoration-unset { text-decoration: unset; }
.yass-text-decoration-revert { text-decoration: revert; }
.yass-text-decoration-revert-layer { text-decoration: revert-layer; }
.yass-text-decoration-underline { text-decoration: underline; }
.yass-text-decoration-overline { text-decoration: overline; }
.yass-text-decoration-line-through { text-decoration: line-through; }
.yass-text-line-through-mode-initial { text-line-through-mode: initial; }
.yass-text-line-through-mode-inherit { text-line-through-mode: inherit; }
.yass-text-line-through-mode-unset { text-line-through-mode: unset; }
.yass-text-line-through-mode-revert { text-line-through-mode: revert; }
.yass-text-line-through-mode-revert-layer { text-line-through-mode: revert-layer; }
.yass-text-line-through-mode-continuous { text-line-through-mode: continuous; }
.yass-text-line-through-mode-skip-white-space { text-line-through-mode: skip-white-space; }
.yass-text-line-through-style-initial { text-line-through-style: initial; }
.yass-text-line-through-style-inherit { text-line-through-style: inherit; }
.yass-text-line-through-style-unset { text-line-through-style: unset; }
.yass-text-line-through-style-revert { text-line-through-style: revert; }
.yass-text-line-through-style-revert-layer { text-line-through-style: revert-layer; }
.yass-text-line-through-style-none { text-line-through-style: none; }
.yass-text-line-through-style-solid { text-line-through-style: solid; }
.yass-text-line-through-style-double { text-line-through-style: double; }
.yass-text-line-through-style-dashed { text-line-through-style: dashed; }
.yass-text-line-through-style-dot-dash { text-line-through-style: dot-dash; }
.yass-text-line-through-style-dot-dot-dash { text-line-through-style: dot-dot-dash; }
.yass-text-line-through-style-wave { text-line-through-style: wave; }
.yass-text-overflow-initial { text-overflow: initial; }
.yass-text-overflow-inherit { text-overflow: inherit; }
.yass-text-overflow-unset { text-overflow: unset; }
.yass-text-overflow-revert { text-overflow: revert; }
.yass-text-overflow-revert-layer { text-overflow: revert-layer; }
.yass-text-overflow-clip { text-overflow: clip; }
.yass-text-overflow-ellipsis { text-overflow: ellipsis; }
.yass-text-overline-mode-initial { text-overline-mode: initial; }
.yass-text-overline-mode-inherit { text-overline-mode: inherit; }
.yass-text-overline-mode-unset { text-overline-mode: unset; }
.yass-text-overline-mode-revert { text-overline-mode: revert; }
.yass-text-overline-mode-revert-layer { text-overline-mode: revert-layer; }
.yass-text-overline-mode-continuous { text-overline-mode: continuous; }
.yass-text-overline-mode-skip-white-space { text-overline-mode: skip-white-space; }
.yass-text-overline-style-initial { text-overline-style: initial; }
.yass-text-overline-style-inherit { text-overline-style: inherit; }
.yass-text-overline-style-unset { text-overline-style: unset; }
.yass-text-overline-style-revert { text-overline-style: revert; }
.yass-text-overline-style-revert-layer { text-overline-style: revert-layer; }
.yass-text-overline-style-none { text-overline-style: none; }
.yass-text-overline-style-solid { text-overline-style: solid; }
.yass-text-overline-style-double { text-overline-style: double; }
.yass-text-overline-style-dashed { text-overline-style: dashed; }
.yass-text-overline-style-dot-dash { text-overline-style: dot-dash; }
.yass-text-overline-style-dot-dot-dash { text-overline-style: dot-dot-dash; }
.yass-text-overline-style-wave { text-overline-style: wave; }
.yass-text-transform-initial { text-transform: initial; }
.yass-text-transform-inherit { text-transform: inherit; }
.yass-text-transform-unset { text-transform: unset; }
.yass-text-transform-revert { text-transform: revert; }
.yass-text-transform-revert-layer { text-transform: revert-layer; }
.yass-text-transform-capitalize { text-transform: capitalize; }
.yass-text-transform-uppercase { text-transform: uppercase; }
.yass-text-transform-lowercase { text-transform: lowercase; }
.yass-text-transform-none { text-transform: none; }
.yass-text-underline-mode-initial { text-underline-mode: initial; }
.yass-text-underline-mode-inherit { text-underline-mode: inherit; }
.yass-text-underline-mode-unset { text-underline-mode: unset; }
.yass-text-underline-mode-revert { text-underline-mode: revert; }
.yass-text-underline-mode-revert-layer { text-underline-mode: revert-layer; }
.yass-text-underline-mode-continuous { text-underline-mode: continuous; }
.yass-text-underline-mode-skip-white-space { text-underline-mode: skip-white-space; }
.yass-text-underline-style-initial { text-underline-style: initial; }
.yass-text-underline-style-inherit { text-underline-style: inherit; }
.yass-text-underline-style-unset { text-underline-style: unset; }
.yass-text-underline-style-revert { text-underline-style: revert; }
.yass-text-underline-style-revert-layer { text-underline-style: revert-layer; }
.yass-text-underline-style-none { text-underline-style: none; }
.yass-text-underline-style-solid { text-underline-style: solid; }
.yass-text-underline-style-double { text-underline-style: double; }
.yass-text-underline-style-dashed { text-underline-style: dashed; }
.yass-text-underline-style-dot-dash { text-underline-style: dot-dash; }
.yass-text-underline-style-dot-dot-dash { text-underline-style: dot-dot-dash; }
.yass-text-underline-style-wave { text-underline-style: wave; }
.yass-unicode-bidi-initial { unicode-bidi: initial; }
.yass-unicode-bidi-inherit { unicode-bidi: inherit; }
.yass-unicode-bidi-unset { unicode-bidi: unset; }
.yass-unicode-bidi-revert { unicode-bidi: revert; }
.yass-unicode-bidi-revert-layer { unicode-bidi: revert-layer; }
.yass-unicode-bidi-normal { unicode-bidi: normal; }
.yass-unicode-bidi-embed { unicode-bidi: embed; }
.yass-unicode-bidi-bidi-override { unicode-bidi: bidi-override; }
.yass-unicode-bidi-isolate { unicode-bidi: isolate; }
.yass-unicode-bidi-isolate-override { unicode-bidi: isolate-override; }
.yass-unicode-bidi-plaintext { unicode-bidi: plaintext; }
.yass-font-display-initial { font-display: initial; }
.yass-font-display-inherit { font-display: inherit; }
.yass-font-display-unset { font-display: unset; }
.yass-font-display-revert { font-display: revert; }
.yass-font-display-revert-layer { font-display: revert-layer; }
.yass-font-display-auto { font-display: auto; }
.yass-font-display-block { font-display: block; }
.yass-font-display-swap { font-display: swap; }
.yass-font-display-fallback { font-display: fallback; }
.yass-font-display-optional { font-display: optional; }
.yass-vector-effect-initial { vector-effect: initial; }
.yass-vector-effect-inherit { vector-effect: inherit; }
.yass-vector-effect-unset { vector-effect: unset; }
.yass-vector-effect-revert { vector-effect: revert; }
.yass-vector-effect-revert-layer { vector-effect: revert-layer; }
.yass-vector-effect-none { vector-effect: none; }
.yass-vector-effect-non-scaling-stroke { vector-effect: non-scaling-stroke; }
.yass-visibility-initial { visibility: initial; }
.yass-visibility-inherit { visibility: inherit; }
.yass-visibility-unset { visibility: unset; }
.yass-visibility-revert { visibility: revert; }
.yass-visibility-revert-layer { visibility: revert-layer; }
.yass-visibility-visible { visibility: visible; }
.yass-visibility-hidden { visibility: hidden; }
.yass-visibility-collapse { visibility: collapse; }
.yass-white-space-initial { white-space: initial; }
.yass-white-space-inherit { white-space: inherit; }
.yass-white-space-unset { white-space: unset; }
.yass-white-space-revert { white-space: revert; }
.yass-white-space-revert-layer { white-space: revert-layer; }
.yass-white-space-normal { white-space: normal; }
.yass-white-space-pre { white-space: pre; }
.yass-white-space-pre-wrap { white-space: pre-wrap; }
.yass-white-space-pre-line { white-space: pre-line; }
.yass-white-space-nowrap { white-space: nowrap; }
.yass-white-space-break-spaces { white-space: break-spaces; }
.yass-word-break-initial { word-break: initial; }
.yass-word-break-inherit { word-break: inherit; }
.yass-word-break-unset { word-break: unset; }
.yass-word-break-revert { word-break: revert; }
.yass-word-break-revert-layer { word-break: revert-layer; }
.yass-word-break-normal { word-break: normal; }
.yass-word-break-break-all { word-break: break-all; }
.yass-word-break-keep-all { word-break: keep-all; }
.yass-word-break-break-word { word-break: break-word; }
.yass-word-wrap-initial { word-wrap: initial; }
.yass-word-wrap-inherit { word-wrap: inherit; }
.yass-word-wrap-unset { word-wrap: unset; }
.yass-word-wrap-revert { word-wrap: revert; }
.yass-word-wrap-revert-layer { word-wrap: revert-layer; }
.yass-word-wrap-normal { word-wrap: normal; }
.yass-word-wrap-break-word { word-wrap: break-word; }
.yass--webkit-appearance-initial { -webkit-appearance: initial; }
.yass--webkit-appearance-inherit { -webkit-appearance: inherit; }
.yass--webkit-appearance-unset { -webkit-appearance: unset; }
.yass--webkit-appearance-revert { -webkit-appearance: revert; }
.yass--webkit-appearance-revert-layer { -webkit-appearance: revert-layer; }
.yass--webkit-appearance-checkbox { -webkit-appearance: checkbox; }
.yass--webkit-appearance-radio { -webkit-appearance: radio; }
.yass--webkit-appearance-push-button { -webkit-appearance: push-button; }
.yass--webkit-appearance-square-button { -webkit-appearance: square-button; }
.yass--webkit-appearance-button { -webkit-appearance: button; }
.yass--webkit-appearance-button-bevel { -webkit-appearance: button-bevel; }
.yass--webkit-appearance-default-button { -webkit-appearance: default-button; }
.yass--webkit-appearance-inner-spin-button { -webkit-appearance: inner-spin-button; }
.yass--webkit-appearance-listbox { -webkit-appearance: listbox; }
.yass--webkit-appearance-listitem { -webkit-appearance: listitem; }
.yass--webkit-appearance-media-controls-background { -webkit-appearance: media-controls-background; }
.yass--webkit-appearance-media-controls-dark-bar-background { -webkit-appearance: media-controls-dark-bar-background; }
.yass--webkit-appearance-media-controls-fullscreen-background { -webkit-appearance: media-controls-fullscreen-background; }
.yass--webkit-appearance-media-controls-light-bar-background { -webkit-appearance: media-controls-light-bar-background; }
.yass--webkit-appearance-media-current-time-display { -webkit-appearance: media-current-time-display; }
.yass--webkit-appearance-media-enter-fullscreen-button { -webkit-appearance: media-enter-fullscreen-button; }
.yass--webkit-appearance-media-exit-fullscreen-button { -webkit-appearance: media-exit-fullscreen-button; }
.yass--webkit-appearance-media-fullscreen-volume-slider { -webkit-appearance: media-fullscreen-volume-slider; }
.yass--webkit-appearance-media-fullscreen-volume-slider-thumb { -webkit-appearance: media-fullscreen-volume-slider-thumb; }
.yass--webkit-appearance-media-mute-button { -webkit-appearance: media-mute-button; }
.yass--webkit-appearance-media-overlay-play-button { -webkit-appearance: media-overlay-play-button; }
.yass--webkit-appearance-media-play-button { -webkit-appearance: media-play-button; }
.yass--webkit-appearance-media-return-to-realtime-button { -webkit-appearance: media-return-to-realtime-button; }
.yass--webkit-appearance-media-rewind-button { -webkit-appearance: media-rewind-button; }
.yass--webkit-appearance-media-seek-back-button { -webkit-appearance: media-seek-back-button; }
.yass--webkit-appearance-media-seek-forward-button { -webkit-appearance: media-seek-forward-button; }
.yass--webkit-appearance-media-slider { -webkit-appearance: media-slider; }
.yass--webkit-appearance-media-sliderthumb { -webkit-appearance: media-sliderthumb; }
.yass--webkit-appearance-media-time-remaining-display { -webkit-appearance: media-time-remaining-display; }
.yass--webkit-appearance-media-toggle-closed-captions-button { -webkit-appearance: media-toggle-closed-captions-button; }
.yass--webkit-appearance-media-volume-slider { -webkit-appearance: media-volume-slider; }
.yass--webkit-appearance-media-volume-slider-container { -webkit-appearance: media-volume-slider-container; }
.yass--webkit-appearance-media-volume-slider-mute-button { -webkit-appearance: media-volume-slider-mute-button; }
.yass--webkit-appearance-media-volume-sliderthumb { -webkit-appearance: media-volume-sliderthumb; }
.yass--webkit-appearance-menulist { -webkit-appearance: menulist; }
.yass--webkit-appearance-menulist-button { -webkit-appearance: menulist-button; }
.yass--webkit-appearance-menulist-text { -webkit-appearance: menulist-text; }
.yass--webkit-appearance-menulist-textfield { -webkit-appearance: menulist-textfield; }
.yass--webkit-appearance-meter { -webkit-appearance: meter; }
.yass--webkit-appearance-progress-bar { -webkit-appearance: progress-bar; }
.yass--webkit-appearance-progress-bar-value { -webkit-appearance: progress-bar-value; }
.yass--webkit-appearance-slider-horizontal { -webkit-appearance: slider-horizontal; }
.yass--webkit-appearance-slider-vertical { -webkit-appearance: slider-vertical; }
.yass--webkit-appearance-sliderthumb-horizontal { -webkit-appearance: sliderthumb-horizontal; }
.yass--webkit-appearance-sliderthumb-vertical { -webkit-appearance: sliderthumb-vertical; }
.yass--webkit-appearance-caret { -webkit-appearance: caret; }
.yass--webkit-appearance-searchfield { -webkit-appearance: searchfield; }
.yass--webkit-appearance-searchfield-decoration { -webkit-appearance: searchfield-decoration; }
.yass--webkit-appearance-searchfield-results-decoration { -webkit-appearance: searchfield-results-decoration; }
.yass--webkit-appearance-searchfield-results-button { -webkit-appearance: searchfield-results-button; }
.yass--webkit-appearance-searchfield-cancel-button { -webkit-appearance: searchfield-cancel-button; }
.yass--webkit-appearance-snapshotted-plugin-overlay { -webkit-appearance: snapshotted-plugin-overlay; }
.yass--webkit-appearance-textfield { -webkit-appearance: textfield; }
.yass--webkit-appearance-relevancy-level-indicator { -webkit-appearance: relevancy-level-indicator; }
.yass--webkit-appearance-continuous-capacity-level-indicator { -webkit-appearance: continuous-capacity-level-indicator; }
.yass--webkit-appearance-discrete-capacity-level-indicator { -webkit-appearance: discrete-capacity-level-indicator; }
.yass--webkit-appearance-rating-level-indicator { -webkit-appearance: rating-level-indicator; }
.yass--webkit-appearance-image-controls-button { -webkit-appearance: image-controls-button; }
.yass--webkit-appearance--apple-pay-button { -webkit-appearance: -apple-pay-button; }
.yass--webkit-appearance-textarea { -webkit-appearance: textarea; }
.yass--webkit-appearance-attachment { -webkit-appearance: attachment; }
.yass--webkit-appearance-caps-lock-indicator { -webkit-appearance: caps-lock-indicator; }
.yass--webkit-appearance-color-well { -webkit-appearance: color-well; }
.yass--webkit-appearance-list-button { -webkit-appearance: list-button; }
.yass--webkit-appearance-none { -webkit-appearance: none; }
.yass--webkit-backface-visibility-initial { -webkit-backface-visibility: initial; }
.yass--webkit-backface-visibility-inherit { -webkit-backface-visibility: inherit; }
.yass--webkit-backface-visibility-unset { -webkit-backface-visibility: unset; }
.yass--webkit-backface-visibility-revert { -webkit-backface-visibility: revert; }
.yass--webkit-backface-visibility-revert-layer { -webkit-backface-visibility: revert-layer; }
.yass--webkit-backface-visibility-visible { -webkit-backface-visibility: visible; }
.yass--webkit-backface-visibility-hidden { -webkit-backface-visibility: hidden; }
.yass--webkit-background-composite-initial { -webkit-background-composite: initial; }
.yass--webkit-background-composite-inherit { -webkit-background-composite: inherit; }
.yass--webkit-background-composite-unset { -webkit-background-composite: unset; }
.yass--webkit-background-composite-revert { -webkit-background-composite: revert; }
.yass--webkit-background-composite-revert-layer { -webkit-background-composite: revert-layer; }
.yass--webkit-background-composite-clear { -webkit-background-composite: clear; }
.yass--webkit-background-composite-copy { -webkit-background-composite: copy; }
.yass--webkit-background-composite-source-over { -webkit-background-composite: source-over; }
.yass--webkit-background-composite-source-in { -webkit-background-composite: source-in; }
.yass--webkit-background-composite-source-out { -webkit-background-composite: source-out; }
.yass--webkit-background-composite-source-atop { -webkit-background-composite: source-atop; }
.yass--webkit-background-composite-destination-over { -webkit-background-composite: destination-over; }
.yass--webkit-background-composite-destination-in { -webkit-background-composite: destination-in; }
.yass--webkit-background-composite-destination-out { -webkit-background-composite: destination-out; }
.yass--webkit-background-composite-destination-atop { -webkit-background-composite: destination-atop; }
.yass--webkit-background-composite-xor { -webkit-background-composite: xor; }
.yass--webkit-background-composite-plus-darker { -webkit-background-composite: plus-darker; }
.yass--webkit-background-composite-highlight { -webkit-background-composite: highlight; }
.yass--webkit-background-composite-plus-lighter { -webkit-background-composite: plus-lighter; }
.yass--webkit-border-fit-initial { -webkit-border-fit: initial; }
.yass--webkit-border-fit-inherit { -webkit-border-fit: inherit; }
.yass--webkit-border-fit-unset { -webkit-border-fit: unset; }
.yass--webkit-border-fit-revert { -webkit-border-fit: revert; }
.yass--webkit-border-fit-revert-layer { -webkit-border-fit: revert-layer; }
.yass--webkit-border-fit-border { -webkit-border-fit: border; }
.yass--webkit-border-fit-lines { -webkit-border-fit: lines; }
.yass--webkit-box-align-initial { -webkit-box-align: initial; }
.yass--webkit-box-align-inherit { -webkit-box-align: inherit; }
.yass--webkit-box-align-unset { -webkit-box-align: unset; }
.yass--webkit-box-align-revert { -webkit-box-align: revert; }
.yass--webkit-box-align-revert-layer { -webkit-box-align: revert-layer; }
.yass--webkit-box-align-stretch { -webkit-box-align: stretch; }
.yass--webkit-box-align-start { -webkit-box-align: start; }
.yass--webkit-box-align-end { -webkit-box-align: end; }
.yass--webkit-box-align-center { -webkit-box-align: center; }
.yass--webkit-box-align-baseline { -webkit-box-align: baseline; }
.yass--webkit-box-direction-initial { -webkit-box-direction: initial; }
.yass--webkit-box-direction-inherit { -webkit-box-direction: inherit; }
.yass--webkit-box-direction-unset { -webkit-box-direction: unset; }
.yass--webkit-box-direction-revert { -webkit-box-direction: revert; }
.yass--webkit-box-direction-revert-layer { -webkit-box-direction: revert-layer; }
.yass--webkit-box-direction-normal { -webkit-box-direction: normal; }
.yass--webkit-box-direction-reverse { -webkit-box-direction: reverse; }
.yass--webkit-box-lines-initial { -webkit-box-lines: initial; }
.yass--webkit-box-lines-inherit { -webkit-box-lines: inherit; }
.yass--webkit-box-lines-unset { -webkit-box-lines: unset; }
.yass--webkit-box-lines-revert { -webkit-box-lines: revert; }
.yass--webkit-box-lines-revert-layer { -webkit-box-lines: revert-layer; }
.yass--webkit-box-lines-single { -webkit-box-lines: single; }
.yass--webkit-box-lines-multiple { -webkit-box-lines: multiple; }
.yass--webkit-box-orient-initial { -webkit-box-orient: initial; }
.yass--webkit-box-orient-inherit { -webkit-box-orient: inherit; }
.yass--webkit-box-orient-unset { -webkit-box-orient: unset; }
.yass--webkit-box-orient-revert { -webkit-box-orient: revert; }
.yass--webkit-box-orient-revert-layer { -webkit-box-orient: revert-layer; }
.yass--webkit-box-orient-horizontal { -webkit-box-orient: horizontal; }
.yass--webkit-box-orient-vertical { -webkit-box-orient: vertical; }
.yass--webkit-box-orient-inline-axis { -webkit-box-orient: inline-axis; }
.yass--webkit-box-orient-block-axis { -webkit-box-orient: block-axis; }
.yass--webkit-box-pack-initial { -webkit-box-pack: initial; }
.yass--webkit-box-pack-inherit { -webkit-box-pack: inherit; }
.yass--webkit-box-pack-unset { -webkit-box-pack: unset; }
.yass--webkit-box-pack-revert { -webkit-box-pack: revert; }
.yass--webkit-box-pack-revert-layer { -webkit-box-pack: revert-layer; }
.yass--webkit-box-pack-start { -webkit-box-pack: start; }
.yass--webkit-box-pack-end { -webkit-box-pack: end; }
.yass--webkit-box-pack-center { -webkit-box-pack: center; }
.yass--webkit-box-pack-justify { -webkit-box-pack: justify; }
.yass--webkit-column-axis-initial { -webkit-column-axis: initial; }
.yass--webkit-column-axis-inherit { -webkit-column-axis: inherit; }
.yass--webkit-column-axis-unset { -webkit-column-axis: unset; }
.yass--webkit-column-axis-revert { -webkit-column-axis: revert; }
.yass--webkit-column-axis-revert-layer { -webkit-column-axis: revert-layer; }
.yass--webkit-column-axis-horizontal { -webkit-column-axis: horizontal; }
.yass--webkit-column-axis-vertical { -webkit-column-axis: vertical; }
.yass--webkit-column-axis-auto { -webkit-column-axis: auto; }
.yass-column-fill-initial { column-fill: initial; }
.yass-column-fill-inherit { column-fill: inherit; }
.yass-column-fill-unset { column-fill: unset; }
.yass-column-fill-revert { column-fill: revert; }
.yass-column-fill-revert-layer { column-fill: revert-layer; }
.yass-column-fill-auto { column-fill: auto; }
.yass-column-fill-balance { column-fill: balance; }
.yass--webkit-column-progression-initial { -webkit-column-progression: initial; }
.yass--webkit-column-progression-inherit { -webkit-column-progression: inherit; }
.yass--webkit-column-progression-unset { -webkit-column-progression: unset; }
.yass--webkit-column-progression-revert { -webkit-column-progression: revert; }
.yass--webkit-column-progression-revert-layer { -webkit-column-progression: revert-layer; }
.yass--webkit-column-progression-normal { -webkit-column-progression: normal; }
.yass--webkit-column-progression-reverse { -webkit-column-progression: reverse; }
.yass-column-rule-style-initial { column-rule-style: initial; }
.yass-column-rule-style-inherit { column-rule-style: inherit; }
.yass-column-rule-style-unset { column-rule-style: unset; }
.yass-column-rule-style-revert { column-rule-style: revert; }
.yass-column-rule-style-revert-layer { column-rule-style: revert-layer; }
.yass-column-rule-style-none { column-rule-style: none; }
.yass-column-rule-style-hidden { column-rule-style: hidden; }
.yass-column-rule-style-inset { column-rule-style: inset; }
.yass-column-rule-style-groove { column-rule-style: groove; }
.yass-column-rule-style-outset { column-rule-style: outset; }
.yass-column-rule-style-ridge { column-rule-style: ridge; }
.yass-column-rule-style-dotted { column-rule-style: dotted; }
.yass-column-rule-style-dashed { column-rule-style: dashed; }
.yass-column-rule-style-solid { column-rule-style: solid; }
.yass-column-rule-style-double { column-rule-style: double; }
.yass--webkit-box-decoration-break-initial { -webkit-box-decoration-break: initial; }
.yass--webkit-box-decoration-break-inherit { -webkit-box-decoration-break: inherit; }
.yass--webkit-box-decoration-break-unset { -webkit-box-decoration-break: unset; }
.yass--webkit-box-decoration-break-revert { -webkit-box-decoration-break: revert; }
.yass--webkit-box-decoration-break-revert-layer { -webkit-box-decoration-break: revert-layer; }
.yass--webkit-box-decoration-break-clone { -webkit-box-decoration-break: clone; }
.yass--webkit-box-decoration-break-slice { -webkit-box-decoration-break: slice; }
.yass-mix-blend-mode-initial { mix-blend-mode: initial; }
.yass-mix-blend-mode-inherit { mix-blend-mode: inherit; }
.yass-mix-blend-mode-unset { mix-blend-mode: unset; }
.yass-mix-blend-mode-revert { mix-blend-mode: revert; }
.yass-mix-blend-mode-revert-layer { mix-blend-mode: revert-layer; }
.yass-mix-blend-mode-normal { mix-blend-mode: normal; }
.yass-mix-blend-mode-multiply { mix-blend-mode: multiply; }
.yass-mix-blend-mode-screen { mix-blend-mode: screen; }
.yass-mix-blend-mode-overlay { mix-blend-mode: overlay; }
.yass-mix-blend-mode-darken { mix-blend-mode: darken; }
.yass-mix-blend-mode-lighten { mix-blend-mode: lighten; }
.yass-mix-blend-mode-color-dodge { mix-blend-mode: color-dodge; }
.yass-mix-blend-mode-color-burn { mix-blend-mode: color-burn; }
.yass-mix-blend-mode-hard-light { mix-blend-mode: hard-light; }
.yass-mix-blend-mode-soft-light { mix-blend-mode: soft-light; }
.yass-mix-blend-mode-difference { mix-blend-mode: difference; }
.yass-mix-blend-mode-exclusion { mix-blend-mode: exclusion; }
.yass-mix-blend-mode-plus-darker { mix-blend-mode: plus-darker; }
.yass-mix-blend-mode-plus-lighter { mix-blend-mode: plus-lighter; }
.yass-isolation-initial { isolation: initial; }
.yass-isolation-inherit { isolation: inherit; }
.yass-isolation-unset { isolation: unset; }
.yass-isolation-revert { isolation: revert; }
.yass-isolation-revert-layer { isolation: revert-layer; }
.yass-isolation-auto { isolation: auto; }
.yass-isolation-isolate { isolation: isolate; }
.yass-align-content-initial { align-content: initial; }
.yass-align-content-inherit { align-content: inherit; }
.yass-align-content-unset { align-content: unset; }
.yass-align-content-revert { align-content: revert; }
.yass-align-content-revert-layer { align-content: revert-layer; }
.yass-align-content-flex-start { align-content: flex-start; }
.yass-align-content-flex-end { align-content: flex-end; }
.yass-align-content-center { align-content: center; }
.yass-align-content-space-between { align-content: space-between; }
.yass-align-content-space-around { align-content: space-around; }
.yass-align-content-stretch { align-content: stretch; }
.yass-align-items-initial { align-items: initial; }
.yass-align-items-inherit { align-items: inherit; }
.yass-align-items-unset { align-items: unset; }
.yass-align-items-revert { align-items: revert; }
.yass-align-items-revert-layer { align-items: revert-layer; }
.yass-align-items-flex-start { align-items: flex-start; }
.yass-align-items-flex-end { align-items: flex-end; }
.yass-align-items-center { align-items: center; }
.yass-align-items-baseline { align-items: baseline; }
.yass-align-items-stretch { align-items: stretch; }
.yass-align-self-initial { align-self: initial; }
.yass-align-self-inherit { align-self: inherit; }
.yass-align-self-unset { align-self: unset; }
.yass-align-self-revert { align-self: revert; }
.yass-align-self-revert-layer { align-self: revert-layer; }
.yass-align-self-auto { align-self: auto; }
.yass-align-self-flex-start { align-self: flex-start; }
.yass-align-self-flex-end { align-self: flex-end; }
.yass-align-self-center { align-self: center; }
.yass-align-self-baseline { align-self: baseline; }
.yass-align-self-stretch { align-self: stretch; }
.yass-flex-direction-initial { flex-direction: initial; }
.yass-flex-direction-inherit { flex-direction: inherit; }
.yass-flex-direction-unset { flex-direction: unset; }
.yass-flex-direction-revert { flex-direction: revert; }
.yass-flex-direction-revert-layer { flex-direction: revert-layer; }
.yass-flex-direction-row { flex-direction: row; }
.yass-flex-direction-row-reverse { flex-direction: row-reverse; }
.yass-flex-direction-column { flex-direction: column; }
.yass-flex-direction-column-reverse { flex-direction: column-reverse; }
.yass-flex-wrap-initial { flex-wrap: initial; }
.yass-flex-wrap-inherit { flex-wrap: inherit; }
.yass-flex-wrap-unset { flex-wrap: unset; }
.yass-flex-wrap-revert { flex-wrap: revert; }
.yass-flex-wrap-revert-layer { flex-wrap: revert-layer; }
.yass-flex-wrap-nowrap { flex-wrap: nowrap; }
.yass-flex-wrap-wrap { flex-wrap: wrap; }
.yass-flex-wrap-wrap-reverse { flex-wrap: wrap-reverse; }
.yass-justify-content-initial { justify-content: initial; }
.yass-justify-content-inherit { justify-content: inherit; }
.yass-justify-content-unset { justify-content: unset; }
.yass-justify-content-revert { justify-content: revert; }
.yass-justify-content-revert-layer { justify-content: revert-layer; }
.yass-justify-content-flex-start { justify-content: flex-start; }
.yass-justify-content-flex-end { justify-content: flex-end; }
.yass-justify-content-center { justify-content: center; }
.yass-justify-content-space-between { justify-content: space-between; }
.yass-justify-content-space-around { justify-content: space-around; }
.yass--webkit-hyphens-initial { -webkit-hyphens: initial; }
.yass--webkit-hyphens-inherit { -webkit-hyphens: inherit; }
.yass--webkit-hyphens-unset { -webkit-hyphens: unset; }
.yass--webkit-hyphens-revert { -webkit-hyphens: revert; }
.yass--webkit-hyphens-revert-layer { -webkit-hyphens: revert-layer; }
.yass--webkit-hyphens-none { -webkit-hyphens: none; }
.yass--webkit-hyphens-manual { -webkit-hyphens: manual; }
.yass--webkit-hyphens-auto { -webkit-hyphens: auto; }
.yass--webkit-line-box-contain-initial { -webkit-line-box-contain: initial; }
.yass--webkit-line-box-contain-inherit { -webkit-line-box-contain: inherit; }
.yass--webkit-line-box-contain-unset { -webkit-line-box-contain: unset; }
.yass--webkit-line-box-contain-revert { -webkit-line-box-contain: revert; }
.yass--webkit-line-box-contain-revert-layer { -webkit-line-box-contain: revert-layer; }
.yass--webkit-line-box-contain-block { -webkit-line-box-contain: block; }
.yass--webkit-line-box-contain-inline { -webkit-line-box-contain: inline; }
.yass--webkit-line-box-contain-font { -webkit-line-box-contain: font; }
.yass--webkit-line-box-contain-glyphs { -webkit-line-box-contain: glyphs; }
.yass--webkit-line-box-contain-replaced { -webkit-line-box-contain: replaced; }
.yass--webkit-line-box-contain-inline-box { -webkit-line-box-contain: inline-box; }
.yass--webkit-line-box-contain-initial-letter { -webkit-line-box-contain: initial-letter; }
.yass--webkit-line-align-initial { -webkit-line-align: initial; }
.yass--webkit-line-align-inherit { -webkit-line-align: inherit; }
.yass--webkit-line-align-unset { -webkit-line-align: unset; }
.yass--webkit-line-align-revert { -webkit-line-align: revert; }
.yass--webkit-line-align-revert-layer { -webkit-line-align: revert-layer; }
.yass--webkit-line-align-none { -webkit-line-align: none; }
.yass--webkit-line-align-edges { -webkit-line-align: edges; }
.yass-line-break-initial { line-break: initial; }
.yass-line-break-inherit { line-break: inherit; }
.yass-line-break-unset { line-break: unset; }
.yass-line-break-revert { line-break: revert; }
.yass-line-break-revert-layer { line-break: revert-layer; }
.yass-line-break-auto { line-break: auto; }
.yass-line-break-loose { line-break: loose; }
.yass-line-break-normal { line-break: normal; }
.yass-line-break-strict { line-break: strict; }
.yass-line-break-anywhere { line-break: anywhere; }
.yass--webkit-line-snap-initial { -webkit-line-snap: initial; }
.yass--webkit-line-snap-inherit { -webkit-line-snap: inherit; }
.yass--webkit-line-snap-unset { -webkit-line-snap: unset; }
.yass--webkit-line-snap-revert { -webkit-line-snap: revert; }
.yass--webkit-line-snap-revert-layer { -webkit-line-snap: revert-layer; }
.yass--webkit-line-snap-none { -webkit-line-snap: none; }
.yass--webkit-line-snap-baseline { -webkit-line-snap: baseline; }
.yass--webkit-line-snap-contain { -webkit-line-snap: contain; }
.yass--webkit-box-snap-initial { -webkit-box-snap: initial; }
.yass--webkit-box-snap-inherit { -webkit-box-snap: inherit; }
.yass--webkit-box-snap-unset { -webkit-box-snap: unset; }
.yass--webkit-box-snap-revert { -webkit-box-snap: revert; }
.yass--webkit-box-snap-revert-layer { -webkit-box-snap: revert-layer; }
.yass--webkit-box-snap-block-start { -webkit-box-snap: block-start; }
.yass--webkit-box-snap-block-end { -webkit-box-snap: block-end; }
.yass--webkit-box-snap-center { -webkit-box-snap: center; }
.yass--webkit-box-snap-first-baseline { -webkit-box-snap: first-baseline; }
.yass--webkit-box-snap-last-baseline { -webkit-box-snap: last-baseline; }
.yass--webkit-margin-after-collapse-initial { -webkit-margin-after-collapse: initial; }
.yass--webkit-margin-after-collapse-inherit { -webkit-margin-after-collapse: inherit; }
.yass--webkit-margin-after-collapse-unset { -webkit-margin-after-collapse: unset; }
.yass--webkit-margin-after-collapse-revert { -webkit-margin-after-collapse: revert; }
.yass--webkit-margin-after-collapse-revert-layer { -webkit-margin-after-collapse: revert-layer; }
.yass--webkit-margin-after-collapse-collapse { -webkit-margin-after-collapse: collapse; }
.yass--webkit-margin-after-collapse-separate { -webkit-margin-after-collapse: separate; }
.yass--webkit-margin-after-collapse-discard { -webkit-margin-after-collapse: discard; }
.yass--webkit-margin-before-collapse-initial { -webkit-margin-before-collapse: initial; }
.yass--webkit-margin-before-collapse-inherit { -webkit-margin-before-collapse: inherit; }
.yass--webkit-margin-before-collapse-unset { -webkit-margin-before-collapse: unset; }
.yass--webkit-margin-before-collapse-revert { -webkit-margin-before-collapse: revert; }
.yass--webkit-margin-before-collapse-revert-layer { -webkit-margin-before-collapse: revert-layer; }
.yass--webkit-margin-before-collapse-collapse { -webkit-margin-before-collapse: collapse; }
.yass--webkit-margin-before-collapse-separate { -webkit-margin-before-collapse: separate; }
.yass--webkit-margin-before-collapse-discard { -webkit-margin-before-collapse: discard; }
.yass--webkit-margin-bottom-collapse-initial { -webkit-margin-bottom-collapse: initial; }
.yass--webkit-margin-bottom-collapse-inherit { -webkit-margin-bottom-collapse: inherit; }
.yass--webkit-margin-bottom-collapse-unset { -webkit-margin-bottom-collapse: unset; }
.yass--webkit-margin-bottom-collapse-revert { -webkit-margin-bottom-collapse: revert; }
.yass--webkit-margin-bottom-collapse-revert-layer { -webkit-margin-bottom-collapse: revert-layer; }
.yass--webkit-margin-bottom-collapse-collapse { -webkit-margin-bottom-collapse: collapse; }
.yass--webkit-margin-bottom-collapse-separate { -webkit-margin-bottom-collapse: separate; }
.yass--webkit-margin-bottom-collapse-discard { -webkit-margin-bottom-collapse: discard; }
.yass--webkit-margin-top-collapse-initial { -webkit-margin-top-collapse: initial; }
.yass--webkit-margin-top-collapse-inherit { -webkit-margin-top-collapse: inherit; }
.yass--webkit-margin-top-collapse-unset { -webkit-margin-top-collapse: unset; }
.yass--webkit-margin-top-collapse-revert { -webkit-margin-top-collapse: revert; }
.yass--webkit-margin-top-collapse-revert-layer { -webkit-margin-top-collapse: revert-layer; }
.yass--webkit-margin-top-collapse-collapse { -webkit-margin-top-collapse: collapse; }
.yass--webkit-margin-top-collapse-separate { -webkit-margin-top-collapse: separate; }
.yass--webkit-margin-top-collapse-discard { -webkit-margin-top-collapse: discard; }
.yass--webkit-marquee-direction-initial { -webkit-marquee-direction: initial; }
.yass--webkit-marquee-direction-inherit { -webkit-marquee-direction: inherit; }
.yass--webkit-marquee-direction-unset { -webkit-marquee-direction: unset; }
.yass--webkit-marquee-direction-revert { -webkit-marquee-direction: revert; }
.yass--webkit-marquee-direction-revert-layer { -webkit-marquee-direction: revert-layer; }
.yass--webkit-marquee-direction-forwards { -webkit-marquee-direction: forwards; }
.yass--webkit-marquee-direction-backwards { -webkit-marquee-direction: backwards; }
.yass--webkit-marquee-direction-ahead { -webkit-marquee-direction: ahead; }
.yass--webkit-marquee-direction-reverse { -webkit-marquee-direction: reverse; }
.yass--webkit-marquee-direction-left { -webkit-marquee-direction: left; }
.yass--webkit-marquee-direction-right { -webkit-marquee-direction: right; }
.yass--webkit-marquee-direction-down { -webkit-marquee-direction: down; }
.yass--webkit-marquee-direction-up { -webkit-marquee-direction: up; }
.yass--webkit-marquee-direction-auto { -webkit-marquee-direction: auto; }
.yass--webkit-marquee-style-initial { -webkit-marquee-style: initial; }
.yass--webkit-marquee-style-inherit { -webkit-marquee-style: inherit; }
.yass--webkit-marquee-style-unset { -webkit-marquee-style: unset; }
.yass--webkit-marquee-style-revert { -webkit-marquee-style: revert; }
.yass--webkit-marquee-style-revert-layer { -webkit-marquee-style: revert-layer; }
.yass--webkit-marquee-style-none { -webkit-marquee-style: none; }
.yass--webkit-marquee-style-slide { -webkit-marquee-style: slide; }
.yass--webkit-marquee-style-scroll { -webkit-marquee-style: scroll; }
.yass--webkit-marquee-style-alternate { -webkit-marquee-style: alternate; }
.yass--webkit-nbsp-mode-initial { -webkit-nbsp-mode: initial; }
.yass--webkit-nbsp-mode-inherit { -webkit-nbsp-mode: inherit; }
.yass--webkit-nbsp-mode-unset { -webkit-nbsp-mode: unset; }
.yass--webkit-nbsp-mode-revert { -webkit-nbsp-mode: revert; }
.yass--webkit-nbsp-mode-revert-layer { -webkit-nbsp-mode: revert-layer; }
.yass--webkit-nbsp-mode-normal { -webkit-nbsp-mode: normal; }
.yass--webkit-nbsp-mode-space { -webkit-nbsp-mode: space; }
.yass-color-scheme-initial { color-scheme: initial; }
.yass-color-scheme-inherit { color-scheme: inherit; }
.yass-color-scheme-unset { color-scheme: unset; }
.yass-color-scheme-revert { color-scheme: revert; }
.yass-color-scheme-revert-layer { color-scheme: revert-layer; }
.yass-color-scheme-auto { color-scheme: auto; }
.yass-color-scheme-light { color-scheme: light; }
.yass-color-scheme-dark { color-scheme: dark; }
.yass-color-scheme-only { color-scheme: only; }
.yass--webkit-print-color-adjust-initial { -webkit-print-color-adjust: initial; }
.yass--webkit-print-color-adjust-inherit { -webkit-print-color-adjust: inherit; }
.yass--webkit-print-color-adjust-unset { -webkit-print-color-adjust: unset; }
.yass--webkit-print-color-adjust-revert { -webkit-print-color-adjust: revert; }
.yass--webkit-print-color-adjust-revert-layer { -webkit-print-color-adjust: revert-layer; }
.yass--webkit-print-color-adjust-exact { -webkit-print-color-adjust: exact; }
.yass--webkit-print-color-adjust-economy { -webkit-print-color-adjust: economy; }
.yass--webkit-rtl-ordering-initial { -webkit-rtl-ordering: initial; }
.yass--webkit-rtl-ordering-inherit { -webkit-rtl-ordering: inherit; }
.yass--webkit-rtl-ordering-unset { -webkit-rtl-ordering: unset; }
.yass--webkit-rtl-ordering-revert { -webkit-rtl-ordering: revert; }
.yass--webkit-rtl-ordering-revert-layer { -webkit-rtl-ordering: revert-layer; }
.yass--webkit-rtl-ordering-logical { -webkit-rtl-ordering: logical; }
.yass--webkit-rtl-ordering-visual { -webkit-rtl-ordering: visual; }
.yass--webkit-text-combine-initial { -webkit-text-combine: initial; }
.yass--webkit-text-combine-inherit { -webkit-text-combine: inherit; }
.yass--webkit-text-combine-unset { -webkit-text-combine: unset; }
.yass--webkit-text-combine-revert { -webkit-text-combine: revert; }
.yass--webkit-text-combine-revert-layer { -webkit-text-combine: revert-layer; }
.yass--webkit-text-combine-none { -webkit-text-combine: none; }
.yass--webkit-text-combine-horizontal { -webkit-text-combine: horizontal; }
.yass--webkit-text-align-last-initial { -webkit-text-align-last: initial; }
.yass--webkit-text-align-last-inherit { -webkit-text-align-last: inherit; }
.yass--webkit-text-align-last-unset { -webkit-text-align-last: unset; }
.yass--webkit-text-align-last-revert { -webkit-text-align-last: revert; }
.yass--webkit-text-align-last-revert-layer { -webkit-text-align-last: revert-layer; }
.yass--webkit-text-align-last-left { -webkit-text-align-last: left; }
.yass--webkit-text-align-last-right { -webkit-text-align-last: right; }
.yass--webkit-text-align-last-center { -webkit-text-align-last: center; }
.yass--webkit-text-align-last-justify { -webkit-text-align-last: justify; }
.yass--webkit-text-align-last-start { -webkit-text-align-last: start; }
.yass--webkit-text-align-last-end { -webkit-text-align-last: end; }
.yass--webkit-text-align-last-auto { -webkit-text-align-last: auto; }
.yass--webkit-text-justify-initial { -webkit-text-justify: initial; }
.yass--webkit-text-justify-inherit { -webkit-text-justify: inherit; }
.yass--webkit-text-justify-unset { -webkit-text-justify: unset; }
.yass--webkit-text-justify-revert { -webkit-text-justify: revert; }
.yass--webkit-text-justify-revert-layer { -webkit-text-justify: revert-layer; }
.yass--webkit-text-justify-inter-word { -webkit-text-justify: inter-word; }
.yass--webkit-text-justify-distribute { -webkit-text-justify: distribute; }
.yass--webkit-text-justify-auto { -webkit-text-justify: auto; }
.yass--webkit-text-justify-none { -webkit-text-justify: none; }
.yass-text-decoration-style-initial { text-decoration-style: initial; }
.yass-text-decoration-style-inherit { text-decoration-style: inherit; }
.yass-text-decoration-style-unset { text-decoration-style: unset; }
.yass-text-decoration-style-revert { text-decoration-style: revert; }
.yass-text-decoration-style-revert-layer { text-decoration-style: revert-layer; }
.yass-text-decoration-style-solid { text-decoration-style: solid; }
.yass-text-decoration-style-double { text-decoration-style: double; }
.yass-text-decoration-style-dotted { text-decoration-style: dotted; }
.yass-text-decoration-style-dashed { text-decoration-style: dashed; }
.yass-text-decoration-style-wavy { text-decoration-style: wavy; }
.yass--webkit-text-security-initial { -webkit-text-security: initial; }
.yass--webkit-text-security-inherit { -webkit-text-security: inherit; }
.yass--webkit-text-security-unset { -webkit-text-security: unset; }
.yass--webkit-text-security-revert { -webkit-text-security: revert; }
.yass--webkit-text-security-revert-layer { -webkit-text-security: revert-layer; }
.yass--webkit-text-security-disc { -webkit-text-security: disc; }
.yass--webkit-text-security-circle { -webkit-text-security: circle; }
.yass--webkit-text-security-square { -webkit-text-security: square; }
.yass--webkit-text-security-none { -webkit-text-security: none; }
.yass-transform-box-initial { transform-box: initial; }
.yass-transform-box-inherit { transform-box: inherit; }
.yass-transform-box-unset { transform-box: unset; }
.yass-transform-box-revert { transform-box: revert; }
.yass-transform-box-revert-layer { transform-box: revert-layer; }
.yass-transform-box-content-box { transform-box: content-box; }
.yass-transform-box-border-box { transform-box: border-box; }
.yass-transform-box-fill-box { transform-box: fill-box; }
.yass-transform-box-stroke-box { transform-box: stroke-box; }
.yass-transform-box-view-box { transform-box: view-box; }
.yass-transform-style-initial { transform-style: initial; }
.yass-transform-style-inherit { transform-style: inherit; }
.yass-transform-style-unset { transform-style: unset; }
.yass-transform-style-revert { transform-style: revert; }
.yass-transform-style-revert-layer { transform-style: revert-layer; }
.yass-transform-style-flat { transform-style: flat; }
.yass-transform-style-preserve-3d { transform-style: preserve-3d; }
.yass--webkit-transform-style-initial { -webkit-transform-style: initial; }
.yass--webkit-transform-style-inherit { -webkit-transform-style: inherit; }
.yass--webkit-transform-style-unset { -webkit-transform-style: unset; }
.yass--webkit-transform-style-revert { -webkit-transform-style: revert; }
.yass--webkit-transform-style-revert-layer { -webkit-transform-style: revert-layer; }
.yass--webkit-transform-style-flat { -webkit-transform-style: flat; }
.yass--webkit-transform-style-preserve-3d { -webkit-transform-style: preserve-3d; }
.yass--webkit-user-drag-initial { -webkit-user-drag: initial; }
.yass--webkit-user-drag-inherit { -webkit-user-drag: inherit; }
.yass--webkit-user-drag-unset { -webkit-user-drag: unset; }
.yass--webkit-user-drag-revert { -webkit-user-drag: revert; }
.yass--webkit-user-drag-revert-layer { -webkit-user-drag: revert-layer; }
.yass--webkit-user-drag-auto { -webkit-user-drag: auto; }
.yass--webkit-user-drag-none { -webkit-user-drag: none; }
.yass--webkit-user-drag-element { -webkit-user-drag: element; }
.yass--webkit-user-modify-initial { -webkit-user-modify: initial; }
.yass--webkit-user-modify-inherit { -webkit-user-modify: inherit; }
.yass--webkit-user-modify-unset { -webkit-user-modify: unset; }
.yass--webkit-user-modify-revert { -webkit-user-modify: revert; }
.yass--webkit-user-modify-revert-layer { -webkit-user-modify: revert-layer; }
.yass--webkit-user-modify-read-only { -webkit-user-modify: read-only; }
.yass--webkit-user-modify-read-write { -webkit-user-modify: read-write; }
.yass--webkit-user-modify-read-write-plaintext-only { -webkit-user-modify: read-write-plaintext-only; }
.yass--webkit-user-select-initial { -webkit-user-select: initial; }
.yass--webkit-user-select-inherit { -webkit-user-select: inherit; }
.yass--webkit-user-select-unset { -webkit-user-select: unset; }
.yass--webkit-user-select-revert { -webkit-user-select: revert; }
.yass--webkit-user-select-revert-layer { -webkit-user-select: revert-layer; }
.yass--webkit-user-select-element { -webkit-user-select: element; }
.yass-scroll-behavior-initial { scroll-behavior: initial; }
.yass-scroll-behavior-inherit { scroll-behavior: inherit; }
.yass-scroll-behavior-unset { scroll-behavior: unset; }
.yass-scroll-behavior-revert { scroll-behavior: revert; }
.yass-scroll-behavior-revert-layer { scroll-behavior: revert-layer; }
.yass-scroll-behavior-auto { scroll-behavior: auto; }
.yass-scroll-behavior-smooth { scroll-behavior: smooth; }
.yass--webkit-overflow-scrolling-initial { -webkit-overflow-scrolling: initial; }
.yass--webkit-overflow-scrolling-inherit { -webkit-overflow-scrolling: inherit; }
.yass--webkit-overflow-scrolling-unset { -webkit-overflow-scrolling: unset; }
.yass--webkit-overflow-scrolling-revert { -webkit-overflow-scrolling: revert; }
.yass--webkit-overflow-scrolling-revert-layer { -webkit-overflow-scrolling: revert-layer; }
.yass--webkit-overflow-scrolling-auto { -webkit-overflow-scrolling: auto; }
.yass--webkit-overflow-scrolling-touch { -webkit-overflow-scrolling: touch; }
.yass-touch-action-initial { touch-action: initial; }
.yass-touch-action-inherit { touch-action: inherit; }
.yass-touch-action-unset { touch-action: unset; }
.yass-touch-action-revert { touch-action: revert; }
.yass-touch-action-revert-layer { touch-action: revert-layer; }
.yass-touch-action-auto { touch-action: auto; }
.yass-touch-action-none { touch-action: none; }
.yass-touch-action-manipulation { touch-action: manipulation; }
.yass-touch-action-pan-x { touch-action: pan-x; }
.yass-touch-action-pan-y { touch-action: pan-y; }
.yass-touch-action-pinch-zoom { touch-action: pinch-zoom; }
.yass--webkit-touch-callout-initial { -webkit-touch-callout: initial; }
.yass--webkit-touch-callout-inherit { -webkit-touch-callout: inherit; }
.yass--webkit-touch-callout-unset { -webkit-touch-callout: unset; }
.yass--webkit-touch-callout-revert { -webkit-touch-callout: revert; }
.yass--webkit-touch-callout-revert-layer { -webkit-touch-callout: revert-layer; }
.yass--webkit-touch-callout-default { -webkit-touch-callout: default; }
.yass--webkit-touch-callout-none { -webkit-touch-callout: none; }
.yass--apple-trailing-word-initial { -apple-trailing-word: initial; }
.yass--apple-trailing-word-inherit { -apple-trailing-word: inherit; }
.yass--apple-trailing-word-unset { -apple-trailing-word: unset; }
.yass--apple-trailing-word-revert { -apple-trailing-word: revert; }
.yass--apple-trailing-word-revert-layer { -apple-trailing-word: revert-layer; }
.yass--apple-trailing-word-auto { -apple-trailing-word: auto; }
.yass--apple-trailing-word--webkit-partially-balanced { -apple-trailing-word: -webkit-partially-balanced; }
.yass-vertical-align-baseline { vertical-align: baseline; }
.yass-vertical-align-sub { vertical-align: sub; }
.yass-vertical-align-super { vertical-align: super; }
.yass-vertical-align-text-top { vertical-align: text-top; }
.yass-vertical-align-text-bottom { vertical-align: text-bottom; }
.yass-vertical-align-middle { vertical-align: middle; }
.yass-vertical-align-top { vertical-align: top; }
.yass-vertical-align-bottom { vertical-align: bottom; }
.yass-vertical-align-inherit { vertical-align: inherit; }
.yass-vertical-align-initial { vertical-align: initial; }
.yass-vertical-align-revert { vertical-align: revert; }
.yass-vertical-align-revert-layer { vertical-align: revert-layer; }
.yass-vertical-align-unset { vertical-align: unset; }
.yass-color-color-red-light { color: var(--yass-color-red-light); }
.yass-color-color-red { color: var(--yass-color-red); }
.yass-color-green { color: var(--yass-color-green); }
.yass-display-block { display: var(--yass-block); }
.yass-color-blue { color: var(--yass-color-blue); }"
`;
